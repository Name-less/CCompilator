AFC 0 R0 //on récupére dans R0 la valeur du premier argument et on le met dans la variable déjà référencée dans notre table des symboles
AFC 2 R1  // pareil mais on récupére le second via R1
AFC 6 12 //corps de la fonction
COP 4 6
POP SP // on récupére SP pour pouvoir revenir à la fonction appelante
JMP SP // et on revient à la fonction appelante
AFC 6 15 // fonction sans arguments on exécute son corps
COP 8 6 // directement
AFC R0 25 //on met dans le registre R0 le premier argument  
AFC R1 30 //on met dans le registre R1 le second argument
AFC 1000 14 //1000 correspond à l'adresse du registre SP 
PUSH SP //on push SP avant de stocker
JMP 0 //on saute à l'adresse de la fonction appelée
POP SP // on est revenue de la fonction appelée donc on récupére SP dans la pile pour revenir à la fonction appelante
JMP SP // la fonction est finie, on jump à l'adresse dans SP qui est celle de la fonction appelante
AFC 1000 19 //on met dans SP l'adresse de retour aprés l'appel
PUSH SP //on push SP avant de sauter
JMP 6 // on saute à l'adresse de la fonction appelée
AFC 6 5
COP 12 6
