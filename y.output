Terminals unused in grammar

   tNULL
   tCONST
   tSQ
   tDQ
   tARROW
   tPOINT
   tMOD
   tEXP
   tADDR
   tSPACE
   tRETURN
   tCOMMENT
   tMOINS


State 71 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 4 shift/reduce
State 104 conflicts: 1 shift/reduce
State 119 conflicts: 2 shift/reduce
State 120 conflicts: 2 shift/reduce


Grammar

    0 $accept: Input $end

    1 Input: %empty
    2      | Input tNEWLINE
    3      | Input Egalite tPOINTVIRG
    4      | Input Declaration
    5      | Input While
    6      | Input For

    7 $@1: %empty

    8 $@2: %empty

    9 Input: Input $@1 If $@2
   10      | Input Function
   11      | Input Appel_Function
   12      | Input Main

   13 $@3: %empty

   14 Main: tINTEGER tMAIN tPO Arg tPF tAO $@3 Input tAF

   15 Arg: tINTEGER tWORD
   16    | tINTEGER tCO tCF tWORD
   17    | tINTEGER tPOINTER tWORD
   18    | %empty

   19 $@4: %empty

   20 $@5: %empty

   21 If: tIF tPO Condition $@4 tPF tAO Input tAF $@5 Else

   22 $@6: %empty

   23 Else: tELSE $@6 tAO Input tAF

   24 $@7: %empty

   25 Else: tELSE $@7 If
   26     | %empty

   27 Condition: Exp tEGALEGAL Exp
   28          | Exp tNOTEGAL Exp
   29          | Exp tSUP Exp
   30          | Exp tINF Exp
   31          | Exp tSUP tEGAL Exp
   32          | Exp tINF tEGAL Exp
   33          | Condition tOR Condition
   34          | Condition tAND Condition

   35 Exp: Exp tPLUS Exp
   36    | Exp tDIV Exp
   37    | Exp tMINUS Exp
   38    | Exp tPOINTER Exp
   39    | tMINUS Exp
   40    | tNOMBRE
   41    | tWORD

   42 LeftTerm: tWORD

   43 Egalite: LeftTerm tEGAL Exp

   44 Declaration: tINTEGER tWORD DeclarationIntMemeLigne tPOINTVIRG
   45            | tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   46            | tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG
   47            | error tPOINTVIRG

   48 DeclarationIntMemeLigne: tVIRG tWORD DeclarationIntMemeLigne
   49                        | %empty

   50 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp DeclarationIntEgalMemeLigne
   51                            | %empty

   52 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne
   53                           | %empty

   54 $@8: %empty

   55 $@9: %empty

   56 While: tWHILE $@8 tPO Condition $@9 tPF tAO Input tAF

   57 $@10: %empty

   58 $@11: %empty

   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF tAO Input tAF

   60 $@12: %empty

   61 $@13: %empty

   62 Function: tINTEGER tWORD $@12 tPO Arguments_Declaration tPF tAO Input $@13 tAF
   63         | tCHAR tWORD tPO Arguments_Declaration tPF tAO Input tAF
   64         | tVOID tWORD tPO Arguments_Declaration tPF tAO Input tAF

   65 Appel_Function: tWORD tPO Arguments tPF

   66 $@14: %empty

   67 Arguments_Declaration: tINTEGER tWORD $@14 tVIRG Arguments_Declaration
   68                      | tVOID tWORD tVIRG Arguments_Declaration
   69                      | tCHAR tWORD tVIRG Arguments_Declaration

   70 $@15: %empty

   71 Arguments_Declaration: tINTEGER tWORD $@15 Arguments_Declaration
   72                      | %empty

   73 Arguments: tWORD tVIRG Arguments

   74 $@16: %empty

   75 Arguments: tNOMBRE tVIRG $@16 Arguments
   76          | tWORD
   77          | tINTEGER
   78          | tNOMBRE
   79          | %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 47
tINTEGER (258) 14 15 16 17 44 45 46 62 67 71 77
tCHAR (259) 63 69
tVOID (260) 64 68
tNULL (261)
tCONST (262)
tMAIN (263) 14
tIF (264) 21
tELSE (265) 23 25
tWHILE (266) 56
tFOR (267) 59
tAO (268) 14 21 23 56 59 62 63 64
tAF (269) 14 21 23 56 59 62 63 64
tCO (270) 16 46 52
tCF (271) 16 46 52
tPO (272) 14 21 56 59 62 63 64 65
tPF (273) 14 21 56 59 62 63 64 65
tSQ (274)
tDQ (275)
tDIV (276) 36
tPOINTVIRG (277) 3 44 45 46 47 59
tARROW (278)
tPOINT (279)
tPLUS (280) 35
tMINUS (281) 37 39
tMOD (282)
tEXP (283)
tSUP (284) 29 31
tINF (285) 30 32
tVIRG (286) 48 50 52 67 68 69 73 75
tEGALEGAL (287) 27
tOR (288) 33
tAND (289) 34
tNOTEGAL (290) 28
tEGAL (291) 31 32 43 45 50
tADDR (292)
tPOINTER (293) 17 38
tSPACE (294)
tNOMBRE (295) 40 46 52 75 78
tWORD (296) 15 16 17 41 42 44 45 46 48 50 52 62 63 64 65 67 68 69 71
    73 76
tRETURN (297)
tNEWLINE (298) 2
tCOMMENT (299)
tMOINS (300)
NEG (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Input (48)
    on left: 1 2 3 4 5 6 9 10 11 12, on right: 0 2 3 4 5 6 9 10 11
    12 14 21 23 56 59 62 63 64
$@1 (49)
    on left: 7, on right: 9
$@2 (50)
    on left: 8, on right: 9
Main (51)
    on left: 14, on right: 12
$@3 (52)
    on left: 13, on right: 14
Arg (53)
    on left: 15 16 17 18, on right: 14
If (54)
    on left: 21, on right: 9 25
$@4 (55)
    on left: 19, on right: 21
$@5 (56)
    on left: 20, on right: 21
Else (57)
    on left: 23 25 26, on right: 21
$@6 (58)
    on left: 22, on right: 23
$@7 (59)
    on left: 24, on right: 25
Condition (60)
    on left: 27 28 29 30 31 32 33 34, on right: 21 33 34 56 59
Exp (61)
    on left: 35 36 37 38 39 40 41, on right: 27 28 29 30 31 32 35 36
    37 38 39 43 45 50
LeftTerm (62)
    on left: 42, on right: 43
Egalite (63)
    on left: 43, on right: 3
Declaration (64)
    on left: 44 45 46 47, on right: 4
DeclarationIntMemeLigne (65)
    on left: 48 49, on right: 44 48
DeclarationIntEgalMemeLigne (66)
    on left: 50 51, on right: 45 50
DeclarationIntTabMemeLigne (67)
    on left: 52 53, on right: 46 52
While (68)
    on left: 56, on right: 5
$@8 (69)
    on left: 54, on right: 56
$@9 (70)
    on left: 55, on right: 56
For (71)
    on left: 59, on right: 6
$@10 (72)
    on left: 57, on right: 59
$@11 (73)
    on left: 58, on right: 59
Function (74)
    on left: 62 63 64, on right: 10
$@12 (75)
    on left: 60, on right: 62
$@13 (76)
    on left: 61, on right: 62
Appel_Function (77)
    on left: 65, on right: 11
Arguments_Declaration (78)
    on left: 67 68 69 71 72, on right: 62 63 64 67 68 69 71
$@14 (79)
    on left: 66, on right: 67
$@15 (80)
    on left: 70, on right: 71
Arguments (81)
    on left: 73 75 76 77 78 79, on right: 65 73 75
$@16 (82)
    on left: 74, on right: 75


State 0

    0 $accept: . Input $end

    $default  reduce using rule 1 (Input)

    Input  go to state 1


State 1

    0 $accept: Input . $end
    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main

    $end      shift, and go to state 2
    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 2

    0 $accept: Input $end .

    $default  accept


State 3

   47 Declaration: error . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 20


State 4

   14 Main: tINTEGER . tMAIN tPO Arg tPF tAO $@3 Input tAF
   44 Declaration: tINTEGER . tWORD DeclarationIntMemeLigne tPOINTVIRG
   45            | tINTEGER . tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   46            | tINTEGER . tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG
   62 Function: tINTEGER . tWORD $@12 tPO Arguments_Declaration tPF tAO Input $@13 tAF

    tMAIN  shift, and go to state 21
    tWORD  shift, and go to state 22


State 5

   63 Function: tCHAR . tWORD tPO Arguments_Declaration tPF tAO Input tAF

    tWORD  shift, and go to state 23


State 6

   64 Function: tVOID . tWORD tPO Arguments_Declaration tPF tAO Input tAF

    tWORD  shift, and go to state 24


State 7

   56 While: tWHILE . $@8 tPO Condition $@9 tPF tAO Input tAF

    $default  reduce using rule 54 ($@8)

    $@8  go to state 25


State 8

   59 For: tFOR . $@10 tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF tAO Input tAF

    $default  reduce using rule 57 ($@10)

    $@10  go to state 26


State 9

   42 LeftTerm: tWORD .
   65 Appel_Function: tWORD . tPO Arguments tPF

    tPO  shift, and go to state 27

    $default  reduce using rule 42 (LeftTerm)


State 10

    2 Input: Input tNEWLINE .

    $default  reduce using rule 2 (Input)


State 11

    9 Input: Input $@1 . If $@2

    tIF  shift, and go to state 28

    If  go to state 29


State 12

   12 Input: Input Main .

    $default  reduce using rule 12 (Input)


State 13

   43 Egalite: LeftTerm . tEGAL Exp

    tEGAL  shift, and go to state 30


State 14

    3 Input: Input Egalite . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 31


State 15

    4 Input: Input Declaration .

    $default  reduce using rule 4 (Input)


State 16

    5 Input: Input While .

    $default  reduce using rule 5 (Input)


State 17

    6 Input: Input For .

    $default  reduce using rule 6 (Input)


State 18

   10 Input: Input Function .

    $default  reduce using rule 10 (Input)


State 19

   11 Input: Input Appel_Function .

    $default  reduce using rule 11 (Input)


State 20

   47 Declaration: error tPOINTVIRG .

    $default  reduce using rule 47 (Declaration)


State 21

   14 Main: tINTEGER tMAIN . tPO Arg tPF tAO $@3 Input tAF

    tPO  shift, and go to state 32


State 22

   44 Declaration: tINTEGER tWORD . DeclarationIntMemeLigne tPOINTVIRG
   45            | tINTEGER tWORD . tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   46            | tINTEGER tWORD . tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG
   62 Function: tINTEGER tWORD . $@12 tPO Arguments_Declaration tPF tAO Input $@13 tAF

    tCO    shift, and go to state 33
    tVIRG  shift, and go to state 34
    tEGAL  shift, and go to state 35

    tPO       reduce using rule 60 ($@12)
    $default  reduce using rule 49 (DeclarationIntMemeLigne)

    DeclarationIntMemeLigne  go to state 36
    $@12                     go to state 37


State 23

   63 Function: tCHAR tWORD . tPO Arguments_Declaration tPF tAO Input tAF

    tPO  shift, and go to state 38


State 24

   64 Function: tVOID tWORD . tPO Arguments_Declaration tPF tAO Input tAF

    tPO  shift, and go to state 39


State 25

   56 While: tWHILE $@8 . tPO Condition $@9 tPF tAO Input tAF

    tPO  shift, and go to state 40


State 26

   59 For: tFOR $@10 . tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF tAO Input tAF

    tPO  shift, and go to state 41


State 27

   65 Appel_Function: tWORD tPO . Arguments tPF

    tINTEGER  shift, and go to state 42
    tNOMBRE   shift, and go to state 43
    tWORD     shift, and go to state 44

    $default  reduce using rule 79 (Arguments)

    Arguments  go to state 45


State 28

   21 If: tIF . tPO Condition $@4 tPF tAO Input tAF $@5 Else

    tPO  shift, and go to state 46


State 29

    9 Input: Input $@1 If . $@2

    $default  reduce using rule 8 ($@2)

    $@2  go to state 47


State 30

   43 Egalite: LeftTerm tEGAL . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 51


State 31

    3 Input: Input Egalite tPOINTVIRG .

    $default  reduce using rule 3 (Input)


State 32

   14 Main: tINTEGER tMAIN tPO . Arg tPF tAO $@3 Input tAF

    tINTEGER  shift, and go to state 52

    $default  reduce using rule 18 (Arg)

    Arg  go to state 53


State 33

   46 Declaration: tINTEGER tWORD tCO . tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tNOMBRE  shift, and go to state 54


State 34

   48 DeclarationIntMemeLigne: tVIRG . tWORD DeclarationIntMemeLigne

    tWORD  shift, and go to state 55


State 35

   45 Declaration: tINTEGER tWORD tEGAL . Exp DeclarationIntEgalMemeLigne tPOINTVIRG

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 56


State 36

   44 Declaration: tINTEGER tWORD DeclarationIntMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 57


State 37

   62 Function: tINTEGER tWORD $@12 . tPO Arguments_Declaration tPF tAO Input $@13 tAF

    tPO  shift, and go to state 58


State 38

   63 Function: tCHAR tWORD tPO . Arguments_Declaration tPF tAO Input tAF

    tINTEGER  shift, and go to state 59
    tCHAR     shift, and go to state 60
    tVOID     shift, and go to state 61

    $default  reduce using rule 72 (Arguments_Declaration)

    Arguments_Declaration  go to state 62


State 39

   64 Function: tVOID tWORD tPO . Arguments_Declaration tPF tAO Input tAF

    tINTEGER  shift, and go to state 59
    tCHAR     shift, and go to state 60
    tVOID     shift, and go to state 61

    $default  reduce using rule 72 (Arguments_Declaration)

    Arguments_Declaration  go to state 63


State 40

   56 While: tWHILE $@8 tPO . Condition $@9 tPF tAO Input tAF

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Condition  go to state 64
    Exp        go to state 65


State 41

   59 For: tFOR $@10 tPO . Input tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF tAO Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 66


State 42

   77 Arguments: tINTEGER .

    $default  reduce using rule 77 (Arguments)


State 43

   75 Arguments: tNOMBRE . tVIRG $@16 Arguments
   78          | tNOMBRE .

    tVIRG  shift, and go to state 67

    $default  reduce using rule 78 (Arguments)


State 44

   73 Arguments: tWORD . tVIRG Arguments
   76          | tWORD .

    tVIRG  shift, and go to state 68

    $default  reduce using rule 76 (Arguments)


State 45

   65 Appel_Function: tWORD tPO Arguments . tPF

    tPF  shift, and go to state 69


State 46

   21 If: tIF tPO . Condition $@4 tPF tAO Input tAF $@5 Else

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Condition  go to state 70
    Exp        go to state 65


State 47

    9 Input: Input $@1 If $@2 .

    $default  reduce using rule 9 (Input)


State 48

   39 Exp: tMINUS . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 71


State 49

   40 Exp: tNOMBRE .

    $default  reduce using rule 40 (Exp)


State 50

   41 Exp: tWORD .

    $default  reduce using rule 41 (Exp)


State 51

   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp
   43 Egalite: LeftTerm tEGAL Exp .

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 43 (Egalite)


State 52

   15 Arg: tINTEGER . tWORD
   16    | tINTEGER . tCO tCF tWORD
   17    | tINTEGER . tPOINTER tWORD

    tCO       shift, and go to state 76
    tPOINTER  shift, and go to state 77
    tWORD     shift, and go to state 78


State 53

   14 Main: tINTEGER tMAIN tPO Arg . tPF tAO $@3 Input tAF

    tPF  shift, and go to state 79


State 54

   46 Declaration: tINTEGER tWORD tCO tNOMBRE . tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tCF  shift, and go to state 80


State 55

   48 DeclarationIntMemeLigne: tVIRG tWORD . DeclarationIntMemeLigne

    tVIRG  shift, and go to state 34

    $default  reduce using rule 49 (DeclarationIntMemeLigne)

    DeclarationIntMemeLigne  go to state 81


State 56

   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp
   45 Declaration: tINTEGER tWORD tEGAL Exp . DeclarationIntEgalMemeLigne tPOINTVIRG

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tVIRG     shift, and go to state 82
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 51 (DeclarationIntEgalMemeLigne)

    DeclarationIntEgalMemeLigne  go to state 83


State 57

   44 Declaration: tINTEGER tWORD DeclarationIntMemeLigne tPOINTVIRG .

    $default  reduce using rule 44 (Declaration)


State 58

   62 Function: tINTEGER tWORD $@12 tPO . Arguments_Declaration tPF tAO Input $@13 tAF

    tINTEGER  shift, and go to state 59
    tCHAR     shift, and go to state 60
    tVOID     shift, and go to state 61

    $default  reduce using rule 72 (Arguments_Declaration)

    Arguments_Declaration  go to state 84


State 59

   67 Arguments_Declaration: tINTEGER . tWORD $@14 tVIRG Arguments_Declaration
   71                      | tINTEGER . tWORD $@15 Arguments_Declaration

    tWORD  shift, and go to state 85


State 60

   69 Arguments_Declaration: tCHAR . tWORD tVIRG Arguments_Declaration

    tWORD  shift, and go to state 86


State 61

   68 Arguments_Declaration: tVOID . tWORD tVIRG Arguments_Declaration

    tWORD  shift, and go to state 87


State 62

   63 Function: tCHAR tWORD tPO Arguments_Declaration . tPF tAO Input tAF

    tPF  shift, and go to state 88


State 63

   64 Function: tVOID tWORD tPO Arguments_Declaration . tPF tAO Input tAF

    tPF  shift, and go to state 89


State 64

   33 Condition: Condition . tOR Condition
   34          | Condition . tAND Condition
   56 While: tWHILE $@8 tPO Condition . $@9 tPF tAO Input tAF

    tOR   shift, and go to state 90
    tAND  shift, and go to state 91

    $default  reduce using rule 55 ($@9)

    $@9  go to state 92


State 65

   27 Condition: Exp . tEGALEGAL Exp
   28          | Exp . tNOTEGAL Exp
   29          | Exp . tSUP Exp
   30          | Exp . tINF Exp
   31          | Exp . tSUP tEGAL Exp
   32          | Exp . tINF tEGAL Exp
   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tDIV       shift, and go to state 72
    tPLUS      shift, and go to state 73
    tMINUS     shift, and go to state 74
    tSUP       shift, and go to state 93
    tINF       shift, and go to state 94
    tEGALEGAL  shift, and go to state 95
    tNOTEGAL   shift, and go to state 96
    tPOINTER   shift, and go to state 75


State 66

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   59 For: tFOR $@10 tPO Input . tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF tAO Input tAF

    error       shift, and go to state 3
    tINTEGER    shift, and go to state 4
    tCHAR       shift, and go to state 5
    tVOID       shift, and go to state 6
    tWHILE      shift, and go to state 7
    tFOR        shift, and go to state 8
    tPOINTVIRG  shift, and go to state 97
    tWORD       shift, and go to state 9
    tNEWLINE    shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 67

   75 Arguments: tNOMBRE tVIRG . $@16 Arguments

    $default  reduce using rule 74 ($@16)

    $@16  go to state 98


State 68

   73 Arguments: tWORD tVIRG . Arguments

    tINTEGER  shift, and go to state 42
    tNOMBRE   shift, and go to state 43
    tWORD     shift, and go to state 44

    $default  reduce using rule 79 (Arguments)

    Arguments  go to state 99


State 69

   65 Appel_Function: tWORD tPO Arguments tPF .

    $default  reduce using rule 65 (Appel_Function)


State 70

   21 If: tIF tPO Condition . $@4 tPF tAO Input tAF $@5 Else
   33 Condition: Condition . tOR Condition
   34          | Condition . tAND Condition

    tOR   shift, and go to state 90
    tAND  shift, and go to state 91

    $default  reduce using rule 19 ($@4)

    $@4  go to state 100


State 71

   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp
   39    | tMINUS Exp .

    tMINUS  shift, and go to state 74

    tMINUS    [reduce using rule 39 (Exp)]
    $default  reduce using rule 39 (Exp)


State 72

   36 Exp: Exp tDIV . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 101


State 73

   35 Exp: Exp tPLUS . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 102


State 74

   37 Exp: Exp tMINUS . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 103


State 75

   38 Exp: Exp tPOINTER . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 104


State 76

   16 Arg: tINTEGER tCO . tCF tWORD

    tCF  shift, and go to state 105


State 77

   17 Arg: tINTEGER tPOINTER . tWORD

    tWORD  shift, and go to state 106


State 78

   15 Arg: tINTEGER tWORD .

    $default  reduce using rule 15 (Arg)


State 79

   14 Main: tINTEGER tMAIN tPO Arg tPF . tAO $@3 Input tAF

    tAO  shift, and go to state 107


State 80

   46 Declaration: tINTEGER tWORD tCO tNOMBRE tCF . DeclarationIntTabMemeLigne tPOINTVIRG

    tVIRG  shift, and go to state 108

    $default  reduce using rule 53 (DeclarationIntTabMemeLigne)

    DeclarationIntTabMemeLigne  go to state 109


State 81

   48 DeclarationIntMemeLigne: tVIRG tWORD DeclarationIntMemeLigne .

    $default  reduce using rule 48 (DeclarationIntMemeLigne)


State 82

   50 DeclarationIntEgalMemeLigne: tVIRG . tWORD tEGAL Exp DeclarationIntEgalMemeLigne

    tWORD  shift, and go to state 110


State 83

   45 Declaration: tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 111


State 84

   62 Function: tINTEGER tWORD $@12 tPO Arguments_Declaration . tPF tAO Input $@13 tAF

    tPF  shift, and go to state 112


State 85

   67 Arguments_Declaration: tINTEGER tWORD . $@14 tVIRG Arguments_Declaration
   71                      | tINTEGER tWORD . $@15 Arguments_Declaration

    tVIRG     reduce using rule 66 ($@14)
    $default  reduce using rule 70 ($@15)

    $@14  go to state 113
    $@15  go to state 114


State 86

   69 Arguments_Declaration: tCHAR tWORD . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 115


State 87

   68 Arguments_Declaration: tVOID tWORD . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 116


State 88

   63 Function: tCHAR tWORD tPO Arguments_Declaration tPF . tAO Input tAF

    tAO  shift, and go to state 117


State 89

   64 Function: tVOID tWORD tPO Arguments_Declaration tPF . tAO Input tAF

    tAO  shift, and go to state 118


State 90

   33 Condition: Condition tOR . Condition

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Condition  go to state 119
    Exp        go to state 65


State 91

   34 Condition: Condition tAND . Condition

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Condition  go to state 120
    Exp        go to state 65


State 92

   56 While: tWHILE $@8 tPO Condition $@9 . tPF tAO Input tAF

    tPF  shift, and go to state 121


State 93

   29 Condition: Exp tSUP . Exp
   31          | Exp tSUP . tEGAL Exp

    tMINUS   shift, and go to state 48
    tEGAL    shift, and go to state 122
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 123


State 94

   30 Condition: Exp tINF . Exp
   32          | Exp tINF . tEGAL Exp

    tMINUS   shift, and go to state 48
    tEGAL    shift, and go to state 124
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 125


State 95

   27 Condition: Exp tEGALEGAL . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 126


State 96

   28 Condition: Exp tNOTEGAL . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 127


State 97

   59 For: tFOR $@10 tPO Input tPOINTVIRG . Condition $@11 tPOINTVIRG Input tPF tAO Input tAF

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Condition  go to state 128
    Exp        go to state 65


State 98

   75 Arguments: tNOMBRE tVIRG $@16 . Arguments

    tINTEGER  shift, and go to state 42
    tNOMBRE   shift, and go to state 43
    tWORD     shift, and go to state 44

    $default  reduce using rule 79 (Arguments)

    Arguments  go to state 129


State 99

   73 Arguments: tWORD tVIRG Arguments .

    $default  reduce using rule 73 (Arguments)


State 100

   21 If: tIF tPO Condition $@4 . tPF tAO Input tAF $@5 Else

    tPF  shift, and go to state 130


State 101

   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   36    | Exp tDIV Exp .
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tMINUS  shift, and go to state 74

    tMINUS    [reduce using rule 36 (Exp)]
    $default  reduce using rule 36 (Exp)


State 102

   35 Exp: Exp . tPLUS Exp
   35    | Exp tPLUS Exp .
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 72
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    tMINUS    [reduce using rule 35 (Exp)]
    $default  reduce using rule 35 (Exp)


State 103

   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   37    | Exp tMINUS Exp .
   38    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    tDIV      [reduce using rule 37 (Exp)]
    tPLUS     [reduce using rule 37 (Exp)]
    tMINUS    [reduce using rule 37 (Exp)]
    tPOINTER  [reduce using rule 37 (Exp)]
    $default  reduce using rule 37 (Exp)


State 104

   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp
   38    | Exp tPOINTER Exp .

    tMINUS  shift, and go to state 74

    tMINUS    [reduce using rule 38 (Exp)]
    $default  reduce using rule 38 (Exp)


State 105

   16 Arg: tINTEGER tCO tCF . tWORD

    tWORD  shift, and go to state 131


State 106

   17 Arg: tINTEGER tPOINTER tWORD .

    $default  reduce using rule 17 (Arg)


State 107

   14 Main: tINTEGER tMAIN tPO Arg tPF tAO . $@3 Input tAF

    $default  reduce using rule 13 ($@3)

    $@3  go to state 132


State 108

   52 DeclarationIntTabMemeLigne: tVIRG . tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne

    tWORD  shift, and go to state 133


State 109

   46 Declaration: tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 134


State 110

   50 DeclarationIntEgalMemeLigne: tVIRG tWORD . tEGAL Exp DeclarationIntEgalMemeLigne

    tEGAL  shift, and go to state 135


State 111

   45 Declaration: tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG .

    $default  reduce using rule 45 (Declaration)


State 112

   62 Function: tINTEGER tWORD $@12 tPO Arguments_Declaration tPF . tAO Input $@13 tAF

    tAO  shift, and go to state 136


State 113

   67 Arguments_Declaration: tINTEGER tWORD $@14 . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 137


State 114

   71 Arguments_Declaration: tINTEGER tWORD $@15 . Arguments_Declaration

    tINTEGER  shift, and go to state 59
    tCHAR     shift, and go to state 60
    tVOID     shift, and go to state 61

    $default  reduce using rule 72 (Arguments_Declaration)

    Arguments_Declaration  go to state 138


State 115

   69 Arguments_Declaration: tCHAR tWORD tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 59
    tCHAR     shift, and go to state 60
    tVOID     shift, and go to state 61

    $default  reduce using rule 72 (Arguments_Declaration)

    Arguments_Declaration  go to state 139


State 116

   68 Arguments_Declaration: tVOID tWORD tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 59
    tCHAR     shift, and go to state 60
    tVOID     shift, and go to state 61

    $default  reduce using rule 72 (Arguments_Declaration)

    Arguments_Declaration  go to state 140


State 117

   63 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 141


State 118

   64 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 142


State 119

   33 Condition: Condition . tOR Condition
   33          | Condition tOR Condition .
   34          | Condition . tAND Condition

    tOR   shift, and go to state 90
    tAND  shift, and go to state 91

    tOR       [reduce using rule 33 (Condition)]
    tAND      [reduce using rule 33 (Condition)]
    $default  reduce using rule 33 (Condition)


State 120

   33 Condition: Condition . tOR Condition
   34          | Condition . tAND Condition
   34          | Condition tAND Condition .

    tOR   shift, and go to state 90
    tAND  shift, and go to state 91

    tOR       [reduce using rule 34 (Condition)]
    tAND      [reduce using rule 34 (Condition)]
    $default  reduce using rule 34 (Condition)


State 121

   56 While: tWHILE $@8 tPO Condition $@9 tPF . tAO Input tAF

    tAO  shift, and go to state 143


State 122

   31 Condition: Exp tSUP tEGAL . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 144


State 123

   29 Condition: Exp tSUP Exp .
   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 29 (Condition)


State 124

   32 Condition: Exp tINF tEGAL . Exp

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 145


State 125

   30 Condition: Exp tINF Exp .
   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 30 (Condition)


State 126

   27 Condition: Exp tEGALEGAL Exp .
   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 27 (Condition)


State 127

   28 Condition: Exp tNOTEGAL Exp .
   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 28 (Condition)


State 128

   33 Condition: Condition . tOR Condition
   34          | Condition . tAND Condition
   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition . $@11 tPOINTVIRG Input tPF tAO Input tAF

    tOR   shift, and go to state 90
    tAND  shift, and go to state 91

    $default  reduce using rule 58 ($@11)

    $@11  go to state 146


State 129

   75 Arguments: tNOMBRE tVIRG $@16 Arguments .

    $default  reduce using rule 75 (Arguments)


State 130

   21 If: tIF tPO Condition $@4 tPF . tAO Input tAF $@5 Else

    tAO  shift, and go to state 147


State 131

   16 Arg: tINTEGER tCO tCF tWORD .

    $default  reduce using rule 16 (Arg)


State 132

   14 Main: tINTEGER tMAIN tPO Arg tPF tAO $@3 . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 148


State 133

   52 DeclarationIntTabMemeLigne: tVIRG tWORD . tCO tNOMBRE tCF DeclarationIntTabMemeLigne

    tCO  shift, and go to state 149


State 134

   46 Declaration: tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG .

    $default  reduce using rule 46 (Declaration)


State 135

   50 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL . Exp DeclarationIntEgalMemeLigne

    tMINUS   shift, and go to state 48
    tNOMBRE  shift, and go to state 49
    tWORD    shift, and go to state 50

    Exp  go to state 150


State 136

   62 Function: tINTEGER tWORD $@12 tPO Arguments_Declaration tPF tAO . Input $@13 tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 151


State 137

   67 Arguments_Declaration: tINTEGER tWORD $@14 tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 59
    tCHAR     shift, and go to state 60
    tVOID     shift, and go to state 61

    $default  reduce using rule 72 (Arguments_Declaration)

    Arguments_Declaration  go to state 152


State 138

   71 Arguments_Declaration: tINTEGER tWORD $@15 Arguments_Declaration .

    $default  reduce using rule 71 (Arguments_Declaration)


State 139

   69 Arguments_Declaration: tCHAR tWORD tVIRG Arguments_Declaration .

    $default  reduce using rule 69 (Arguments_Declaration)


State 140

   68 Arguments_Declaration: tVOID tWORD tVIRG Arguments_Declaration .

    $default  reduce using rule 68 (Arguments_Declaration)


State 141

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   63 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tAF       shift, and go to state 153
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 142

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   64 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tAF       shift, and go to state 154
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 143

   56 While: tWHILE $@8 tPO Condition $@9 tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 155


State 144

   31 Condition: Exp tSUP tEGAL Exp .
   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 31 (Condition)


State 145

   32 Condition: Exp tINF tEGAL Exp .
   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 32 (Condition)


State 146

   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition $@11 . tPOINTVIRG Input tPF tAO Input tAF

    tPOINTVIRG  shift, and go to state 156


State 147

   21 If: tIF tPO Condition $@4 tPF tAO . Input tAF $@5 Else

    $default  reduce using rule 1 (Input)

    Input  go to state 157


State 148

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   14 Main: tINTEGER tMAIN tPO Arg tPF tAO $@3 Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tAF       shift, and go to state 158
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 149

   52 DeclarationIntTabMemeLigne: tVIRG tWORD tCO . tNOMBRE tCF DeclarationIntTabMemeLigne

    tNOMBRE  shift, and go to state 159


State 150

   35 Exp: Exp . tPLUS Exp
   36    | Exp . tDIV Exp
   37    | Exp . tMINUS Exp
   38    | Exp . tPOINTER Exp
   50 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp . DeclarationIntEgalMemeLigne

    tDIV      shift, and go to state 72
    tPLUS     shift, and go to state 73
    tMINUS    shift, and go to state 74
    tVIRG     shift, and go to state 82
    tPOINTER  shift, and go to state 75

    $default  reduce using rule 51 (DeclarationIntEgalMemeLigne)

    DeclarationIntEgalMemeLigne  go to state 160


State 151

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   62 Function: tINTEGER tWORD $@12 tPO Arguments_Declaration tPF tAO Input . $@13 tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)
    tAF  reduce using rule 61 ($@13)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    $@13            go to state 161
    Appel_Function  go to state 19


State 152

   67 Arguments_Declaration: tINTEGER tWORD $@14 tVIRG Arguments_Declaration .

    $default  reduce using rule 67 (Arguments_Declaration)


State 153

   63 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO Input tAF .

    $default  reduce using rule 63 (Function)


State 154

   64 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO Input tAF .

    $default  reduce using rule 64 (Function)


State 155

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   56 While: tWHILE $@8 tPO Condition $@9 tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tAF       shift, and go to state 162
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 156

   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG . Input tPF tAO Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 163


State 157

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   21 If: tIF tPO Condition $@4 tPF tAO Input . tAF $@5 Else

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tAF       shift, and go to state 164
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 158

   14 Main: tINTEGER tMAIN tPO Arg tPF tAO $@3 Input tAF .

    $default  reduce using rule 14 (Main)


State 159

   52 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE . tCF DeclarationIntTabMemeLigne

    tCF  shift, and go to state 165


State 160

   50 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp DeclarationIntEgalMemeLigne .

    $default  reduce using rule 50 (DeclarationIntEgalMemeLigne)


State 161

   62 Function: tINTEGER tWORD $@12 tPO Arguments_Declaration tPF tAO Input $@13 . tAF

    tAF  shift, and go to state 166


State 162

   56 While: tWHILE $@8 tPO Condition $@9 tPF tAO Input tAF .

    $default  reduce using rule 56 (While)


State 163

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG Input . tPF tAO Input tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tPF       shift, and go to state 167
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 164

   21 If: tIF tPO Condition $@4 tPF tAO Input tAF . $@5 Else

    $default  reduce using rule 20 ($@5)

    $@5  go to state 168


State 165

   52 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF . DeclarationIntTabMemeLigne

    tVIRG  shift, and go to state 108

    $default  reduce using rule 53 (DeclarationIntTabMemeLigne)

    DeclarationIntTabMemeLigne  go to state 169


State 166

   62 Function: tINTEGER tWORD $@12 tPO Arguments_Declaration tPF tAO Input $@13 tAF .

    $default  reduce using rule 62 (Function)


State 167

   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF . tAO Input tAF

    tAO  shift, and go to state 170


State 168

   21 If: tIF tPO Condition $@4 tPF tAO Input tAF $@5 . Else

    tELSE  shift, and go to state 171

    $default  reduce using rule 26 (Else)

    Else  go to state 172


State 169

   52 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne .

    $default  reduce using rule 52 (DeclarationIntTabMemeLigne)


State 170

   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 173


State 171

   23 Else: tELSE . $@6 tAO Input tAF
   25     | tELSE . $@7 If

    tIF       reduce using rule 24 ($@7)
    $default  reduce using rule 22 ($@6)

    $@6  go to state 174
    $@7  go to state 175


State 172

   21 If: tIF tPO Condition $@4 tPF tAO Input tAF $@5 Else .

    $default  reduce using rule 21 (If)


State 173

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tAF       shift, and go to state 176
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 174

   23 Else: tELSE $@6 . tAO Input tAF

    tAO  shift, and go to state 177


State 175

   25 Else: tELSE $@7 . If

    tIF  shift, and go to state 28

    If  go to state 178


State 176

   59 For: tFOR $@10 tPO Input tPOINTVIRG Condition $@11 tPOINTVIRG Input tPF tAO Input tAF .

    $default  reduce using rule 59 (For)


State 177

   23 Else: tELSE $@6 tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 179


State 178

   25 Else: tELSE $@7 If .

    $default  reduce using rule 25 (Else)


State 179

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    5      | Input . While
    6      | Input . For
    9      | Input . $@1 If $@2
   10      | Input . Function
   11      | Input . Appel_Function
   12      | Input . Main
   23 Else: tELSE $@6 tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tCHAR     shift, and go to state 5
    tVOID     shift, and go to state 6
    tWHILE    shift, and go to state 7
    tFOR      shift, and go to state 8
    tAF       shift, and go to state 180
    tWORD     shift, and go to state 9
    tNEWLINE  shift, and go to state 10

    tIF  reduce using rule 7 ($@1)

    $@1             go to state 11
    Main            go to state 12
    LeftTerm        go to state 13
    Egalite         go to state 14
    Declaration     go to state 15
    While           go to state 16
    For             go to state 17
    Function        go to state 18
    Appel_Function  go to state 19


State 180

   23 Else: tELSE $@6 tAO Input tAF .

    $default  reduce using rule 23 (Else)
