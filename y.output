Terminals unused in grammar

   tNULL
   tCONST
   tSQ
   tDQ
   tARROW
   tPOINT
   tMOD
   tEXP
   tADDR
   tSPACE
   tRETURN
   tCOMMENT
   tMOINS


State 1 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 94 conflicts: 4 shift/reduce
State 95 conflicts: 1 shift/reduce
State 126 conflicts: 2 shift/reduce
State 127 conflicts: 2 shift/reduce
State 142 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce
State 162 conflicts: 1 shift/reduce
State 163 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 186 conflicts: 1 shift/reduce
State 187 conflicts: 1 shift/reduce


Grammar

    0 $accept: Input $end

    1 Input: %empty
    2      | Input tNEWLINE
    3      | Input Egalite tPOINTVIRG
    4      | Input Declaration

    5 $@1: %empty

    6 Input: Input $@1 While

    7 $@2: %empty

    8 Input: Input $@2 For

    9 $@3: %empty

   10 Input: Input $@3 If

   11 $@4: %empty

   12 Input: Input $@4 Function
   13      | Input Appel_Function
   14      | Input Main

   15 $@5: %empty

   16 Main: tINTEGER tMAIN tPO Arg tPF tAO $@5 Input tAF

   17 Arg: tINTEGER tWORD
   18    | tINTEGER tCO tCF tWORD
   19    | tINTEGER tPOINTER tWORD
   20    | %empty

   21 $@6: %empty

   22 $@7: %empty

   23 $@8: %empty

   24 If: tIF tPO $@6 Condition $@7 tPF tAO Input tAF $@8 Else

   25 $@9: %empty

   26 Else: tELSE $@9 tAO Input tAF

   27 $@10: %empty

   28 Else: tELSE $@10 If
   29     | %empty

   30 Condition: Exp tEGALEGAL Exp
   31          | Exp tNOTEGAL Exp
   32          | Exp tSUP Exp
   33          | Exp tINF Exp
   34          | Exp tSUP tEGAL Exp
   35          | Exp tINF tEGAL Exp
   36          | Condition tOR Condition
   37          | Condition tAND Condition

   38 Exp: Exp tPLUS Exp
   39    | Exp tDIV Exp
   40    | Exp tMINUS Exp
   41    | Exp tPOINTER Exp
   42    | tMINUS Exp
   43    | tNOMBRE
   44    | tWORD

   45 LeftTerm: tWORD

   46 Egalite: LeftTerm tEGAL Exp

   47 Declaration: tINTEGER tWORD DeclarationIntMemeLigne tPOINTVIRG
   48            | tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   49            | tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG
   50            | error tPOINTVIRG

   51 DeclarationIntMemeLigne: tVIRG tWORD DeclarationIntMemeLigne
   52                        | %empty

   53 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp DeclarationIntEgalMemeLigne
   54                            | %empty

   55 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne
   56                           | %empty

   57 $@11: %empty

   58 $@12: %empty

   59 $@13: %empty

   60 While: tWHILE $@11 tPO $@12 Condition $@13 tPF tAO Input tAF

   61 $@14: %empty

   62 $@15: %empty

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF

   64 $@16: %empty

   65 $@17: %empty

   66 Function: tINTEGER tWORD $@16 tPO Arguments_Declaration tPF tAO Input $@17 tAF
   67         | tCHAR tWORD tPO Arguments_Declaration tPF tAO Input tAF
   68         | tVOID tWORD tPO Arguments_Declaration tPF tAO Input tAF

   69 Appel_Function: tWORD tPO Arguments tPF

   70 $@18: %empty

   71 Arguments_Declaration: tINTEGER tWORD $@18 tVIRG Arguments_Declaration
   72                      | tVOID tWORD tVIRG Arguments_Declaration
   73                      | tCHAR tWORD tVIRG Arguments_Declaration

   74 $@19: %empty

   75 Arguments_Declaration: tINTEGER tWORD $@19 Arguments_Declaration
   76                      | %empty

   77 Arguments: tWORD tVIRG Arguments

   78 $@20: %empty

   79 Arguments: tNOMBRE tVIRG $@20 Arguments
   80          | tWORD
   81          | tINTEGER
   82          | tNOMBRE
   83          | %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 50
tINTEGER (258) 16 17 18 19 47 48 49 66 71 75 81
tCHAR (259) 67 73
tVOID (260) 68 72
tNULL (261)
tCONST (262)
tMAIN (263) 16
tIF (264) 24
tELSE (265) 26 28
tWHILE (266) 60
tFOR (267) 63
tAO (268) 16 24 26 60 63 66 67 68
tAF (269) 16 24 26 60 63 66 67 68
tCO (270) 18 49 55
tCF (271) 18 49 55
tPO (272) 16 24 60 63 66 67 68 69
tPF (273) 16 24 60 63 66 67 68 69
tSQ (274)
tDQ (275)
tDIV (276) 39
tPOINTVIRG (277) 3 47 48 49 50 63
tARROW (278)
tPOINT (279)
tPLUS (280) 38
tMINUS (281) 40 42
tMOD (282)
tEXP (283)
tSUP (284) 32 34
tINF (285) 33 35
tVIRG (286) 51 53 55 71 72 73 77 79
tEGALEGAL (287) 30
tOR (288) 36
tAND (289) 37
tNOTEGAL (290) 31
tEGAL (291) 34 35 46 48 53 63
tADDR (292)
tPOINTER (293) 19 41
tSPACE (294)
tNOMBRE (295) 43 49 55 79 82
tWORD (296) 17 18 19 44 45 47 48 49 51 53 55 63 66 67 68 69 71 72 73
    75 77 80
tRETURN (297)
tNEWLINE (298) 2
tCOMMENT (299)
tMOINS (300)
NEG (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Input (48)
    on left: 1 2 3 4 6 8 10 12 13 14, on right: 0 2 3 4 6 8 10 12 13
    14 16 24 26 60 63 66 67 68
$@1 (49)
    on left: 5, on right: 6
$@2 (50)
    on left: 7, on right: 8
$@3 (51)
    on left: 9, on right: 10
$@4 (52)
    on left: 11, on right: 12
Main (53)
    on left: 16, on right: 14
$@5 (54)
    on left: 15, on right: 16
Arg (55)
    on left: 17 18 19 20, on right: 16
If (56)
    on left: 24, on right: 10 28
$@6 (57)
    on left: 21, on right: 24
$@7 (58)
    on left: 22, on right: 24
$@8 (59)
    on left: 23, on right: 24
Else (60)
    on left: 26 28 29, on right: 24
$@9 (61)
    on left: 25, on right: 26
$@10 (62)
    on left: 27, on right: 28
Condition (63)
    on left: 30 31 32 33 34 35 36 37, on right: 24 36 37 60 63
Exp (64)
    on left: 38 39 40 41 42 43 44, on right: 30 31 32 33 34 35 38 39
    40 41 42 46 48 53 63
LeftTerm (65)
    on left: 45, on right: 46
Egalite (66)
    on left: 46, on right: 3 63
Declaration (67)
    on left: 47 48 49 50, on right: 4
DeclarationIntMemeLigne (68)
    on left: 51 52, on right: 47 51
DeclarationIntEgalMemeLigne (69)
    on left: 53 54, on right: 48 53
DeclarationIntTabMemeLigne (70)
    on left: 55 56, on right: 49 55
While (71)
    on left: 60, on right: 6
$@11 (72)
    on left: 57, on right: 60
$@12 (73)
    on left: 58, on right: 60
$@13 (74)
    on left: 59, on right: 60
For (75)
    on left: 63, on right: 8
$@14 (76)
    on left: 61, on right: 63
$@15 (77)
    on left: 62, on right: 63
Function (78)
    on left: 66 67 68, on right: 12
$@16 (79)
    on left: 64, on right: 66
$@17 (80)
    on left: 65, on right: 66
Appel_Function (81)
    on left: 69, on right: 13
Arguments_Declaration (82)
    on left: 71 72 73 75 76, on right: 66 67 68 71 72 73 75
$@18 (83)
    on left: 70, on right: 71
$@19 (84)
    on left: 74, on right: 75
Arguments (85)
    on left: 77 79 80 81 82 83, on right: 69 77 79
$@20 (86)
    on left: 78, on right: 79


State 0

    0 $accept: . Input $end

    $default  reduce using rule 1 (Input)

    Input  go to state 1


State 1

    0 $accept: Input . $end
    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main

    $end      shift, and go to state 2
    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 2

    0 $accept: Input $end .

    $default  accept


State 3

   50 Declaration: error . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 16


State 4

   16 Main: tINTEGER . tMAIN tPO Arg tPF tAO $@5 Input tAF
   47 Declaration: tINTEGER . tWORD DeclarationIntMemeLigne tPOINTVIRG
   48            | tINTEGER . tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   49            | tINTEGER . tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tMAIN  shift, and go to state 17
    tWORD  shift, and go to state 18


State 5

   45 LeftTerm: tWORD .
   69 Appel_Function: tWORD . tPO Arguments tPF

    tPO  shift, and go to state 19

    $default  reduce using rule 45 (LeftTerm)


State 6

    2 Input: Input tNEWLINE .

    $default  reduce using rule 2 (Input)


State 7

    6 Input: Input $@1 . While

    tWHILE  shift, and go to state 20

    While  go to state 21


State 8

    8 Input: Input $@2 . For

    tFOR  shift, and go to state 22

    For  go to state 23


State 9

   10 Input: Input $@3 . If

    tIF  shift, and go to state 24

    If  go to state 25


State 10

   12 Input: Input $@4 . Function

    tINTEGER  shift, and go to state 26
    tCHAR     shift, and go to state 27
    tVOID     shift, and go to state 28

    Function  go to state 29


State 11

   14 Input: Input Main .

    $default  reduce using rule 14 (Input)


State 12

   46 Egalite: LeftTerm . tEGAL Exp

    tEGAL  shift, and go to state 30


State 13

    3 Input: Input Egalite . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 31


State 14

    4 Input: Input Declaration .

    $default  reduce using rule 4 (Input)


State 15

   13 Input: Input Appel_Function .

    $default  reduce using rule 13 (Input)


State 16

   50 Declaration: error tPOINTVIRG .

    $default  reduce using rule 50 (Declaration)


State 17

   16 Main: tINTEGER tMAIN . tPO Arg tPF tAO $@5 Input tAF

    tPO  shift, and go to state 32


State 18

   47 Declaration: tINTEGER tWORD . DeclarationIntMemeLigne tPOINTVIRG
   48            | tINTEGER tWORD . tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   49            | tINTEGER tWORD . tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tCO    shift, and go to state 33
    tVIRG  shift, and go to state 34
    tEGAL  shift, and go to state 35

    $default  reduce using rule 52 (DeclarationIntMemeLigne)

    DeclarationIntMemeLigne  go to state 36


State 19

   69 Appel_Function: tWORD tPO . Arguments tPF

    tINTEGER  shift, and go to state 37
    tNOMBRE   shift, and go to state 38
    tWORD     shift, and go to state 39

    $default  reduce using rule 83 (Arguments)

    Arguments  go to state 40


State 20

   60 While: tWHILE . $@11 tPO $@12 Condition $@13 tPF tAO Input tAF

    $default  reduce using rule 57 ($@11)

    $@11  go to state 41


State 21

    6 Input: Input $@1 While .

    $default  reduce using rule 6 (Input)


State 22

   63 For: tFOR . tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF

    tPO  shift, and go to state 42


State 23

    8 Input: Input $@2 For .

    $default  reduce using rule 8 (Input)


State 24

   24 If: tIF . tPO $@6 Condition $@7 tPF tAO Input tAF $@8 Else

    tPO  shift, and go to state 43


State 25

   10 Input: Input $@3 If .

    $default  reduce using rule 10 (Input)


State 26

   66 Function: tINTEGER . tWORD $@16 tPO Arguments_Declaration tPF tAO Input $@17 tAF

    tWORD  shift, and go to state 44


State 27

   67 Function: tCHAR . tWORD tPO Arguments_Declaration tPF tAO Input tAF

    tWORD  shift, and go to state 45


State 28

   68 Function: tVOID . tWORD tPO Arguments_Declaration tPF tAO Input tAF

    tWORD  shift, and go to state 46


State 29

   12 Input: Input $@4 Function .

    $default  reduce using rule 12 (Input)


State 30

   46 Egalite: LeftTerm tEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 50


State 31

    3 Input: Input Egalite tPOINTVIRG .

    $default  reduce using rule 3 (Input)


State 32

   16 Main: tINTEGER tMAIN tPO . Arg tPF tAO $@5 Input tAF

    tINTEGER  shift, and go to state 51

    $default  reduce using rule 20 (Arg)

    Arg  go to state 52


State 33

   49 Declaration: tINTEGER tWORD tCO . tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tNOMBRE  shift, and go to state 53


State 34

   51 DeclarationIntMemeLigne: tVIRG . tWORD DeclarationIntMemeLigne

    tWORD  shift, and go to state 54


State 35

   48 Declaration: tINTEGER tWORD tEGAL . Exp DeclarationIntEgalMemeLigne tPOINTVIRG

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 55


State 36

   47 Declaration: tINTEGER tWORD DeclarationIntMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 56


State 37

   81 Arguments: tINTEGER .

    $default  reduce using rule 81 (Arguments)


State 38

   79 Arguments: tNOMBRE . tVIRG $@20 Arguments
   82          | tNOMBRE .

    tVIRG  shift, and go to state 57

    $default  reduce using rule 82 (Arguments)


State 39

   77 Arguments: tWORD . tVIRG Arguments
   80          | tWORD .

    tVIRG  shift, and go to state 58

    $default  reduce using rule 80 (Arguments)


State 40

   69 Appel_Function: tWORD tPO Arguments . tPF

    tPF  shift, and go to state 59


State 41

   60 While: tWHILE $@11 . tPO $@12 Condition $@13 tPF tAO Input tAF

    tPO  shift, and go to state 60


State 42

   63 For: tFOR tPO . Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF

    tWORD  shift, and go to state 61

    LeftTerm  go to state 12
    Egalite   go to state 62


State 43

   24 If: tIF tPO . $@6 Condition $@7 tPF tAO Input tAF $@8 Else

    $default  reduce using rule 21 ($@6)

    $@6  go to state 63


State 44

   66 Function: tINTEGER tWORD . $@16 tPO Arguments_Declaration tPF tAO Input $@17 tAF

    $default  reduce using rule 64 ($@16)

    $@16  go to state 64


State 45

   67 Function: tCHAR tWORD . tPO Arguments_Declaration tPF tAO Input tAF

    tPO  shift, and go to state 65


State 46

   68 Function: tVOID tWORD . tPO Arguments_Declaration tPF tAO Input tAF

    tPO  shift, and go to state 66


State 47

   42 Exp: tMINUS . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 67


State 48

   43 Exp: tNOMBRE .

    $default  reduce using rule 43 (Exp)


State 49

   44 Exp: tWORD .

    $default  reduce using rule 44 (Exp)


State 50

   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp
   46 Egalite: LeftTerm tEGAL Exp .

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 46 (Egalite)


State 51

   17 Arg: tINTEGER . tWORD
   18    | tINTEGER . tCO tCF tWORD
   19    | tINTEGER . tPOINTER tWORD

    tCO       shift, and go to state 72
    tPOINTER  shift, and go to state 73
    tWORD     shift, and go to state 74


State 52

   16 Main: tINTEGER tMAIN tPO Arg . tPF tAO $@5 Input tAF

    tPF  shift, and go to state 75


State 53

   49 Declaration: tINTEGER tWORD tCO tNOMBRE . tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tCF  shift, and go to state 76


State 54

   51 DeclarationIntMemeLigne: tVIRG tWORD . DeclarationIntMemeLigne

    tVIRG  shift, and go to state 34

    $default  reduce using rule 52 (DeclarationIntMemeLigne)

    DeclarationIntMemeLigne  go to state 77


State 55

   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp
   48 Declaration: tINTEGER tWORD tEGAL Exp . DeclarationIntEgalMemeLigne tPOINTVIRG

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tVIRG     shift, and go to state 78
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 54 (DeclarationIntEgalMemeLigne)

    DeclarationIntEgalMemeLigne  go to state 79


State 56

   47 Declaration: tINTEGER tWORD DeclarationIntMemeLigne tPOINTVIRG .

    $default  reduce using rule 47 (Declaration)


State 57

   79 Arguments: tNOMBRE tVIRG . $@20 Arguments

    $default  reduce using rule 78 ($@20)

    $@20  go to state 80


State 58

   77 Arguments: tWORD tVIRG . Arguments

    tINTEGER  shift, and go to state 37
    tNOMBRE   shift, and go to state 38
    tWORD     shift, and go to state 39

    $default  reduce using rule 83 (Arguments)

    Arguments  go to state 81


State 59

   69 Appel_Function: tWORD tPO Arguments tPF .

    $default  reduce using rule 69 (Appel_Function)


State 60

   60 While: tWHILE $@11 tPO . $@12 Condition $@13 tPF tAO Input tAF

    $default  reduce using rule 58 ($@12)

    $@12  go to state 82


State 61

   45 LeftTerm: tWORD .

    $default  reduce using rule 45 (LeftTerm)


State 62

   63 For: tFOR tPO Egalite . tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF

    tPOINTVIRG  shift, and go to state 83


State 63

   24 If: tIF tPO $@6 . Condition $@7 tPF tAO Input tAF $@8 Else

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 84
    Exp        go to state 85


State 64

   66 Function: tINTEGER tWORD $@16 . tPO Arguments_Declaration tPF tAO Input $@17 tAF

    tPO  shift, and go to state 86


State 65

   67 Function: tCHAR tWORD tPO . Arguments_Declaration tPF tAO Input tAF

    tINTEGER  shift, and go to state 87
    tCHAR     shift, and go to state 88
    tVOID     shift, and go to state 89

    $default  reduce using rule 76 (Arguments_Declaration)

    Arguments_Declaration  go to state 90


State 66

   68 Function: tVOID tWORD tPO . Arguments_Declaration tPF tAO Input tAF

    tINTEGER  shift, and go to state 87
    tCHAR     shift, and go to state 88
    tVOID     shift, and go to state 89

    $default  reduce using rule 76 (Arguments_Declaration)

    Arguments_Declaration  go to state 91


State 67

   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp
   42    | tMINUS Exp .

    tMINUS  shift, and go to state 70

    tMINUS    [reduce using rule 42 (Exp)]
    $default  reduce using rule 42 (Exp)


State 68

   39 Exp: Exp tDIV . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 92


State 69

   38 Exp: Exp tPLUS . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 93


State 70

   40 Exp: Exp tMINUS . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 94


State 71

   41 Exp: Exp tPOINTER . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 95


State 72

   18 Arg: tINTEGER tCO . tCF tWORD

    tCF  shift, and go to state 96


State 73

   19 Arg: tINTEGER tPOINTER . tWORD

    tWORD  shift, and go to state 97


State 74

   17 Arg: tINTEGER tWORD .

    $default  reduce using rule 17 (Arg)


State 75

   16 Main: tINTEGER tMAIN tPO Arg tPF . tAO $@5 Input tAF

    tAO  shift, and go to state 98


State 76

   49 Declaration: tINTEGER tWORD tCO tNOMBRE tCF . DeclarationIntTabMemeLigne tPOINTVIRG

    tVIRG  shift, and go to state 99

    $default  reduce using rule 56 (DeclarationIntTabMemeLigne)

    DeclarationIntTabMemeLigne  go to state 100


State 77

   51 DeclarationIntMemeLigne: tVIRG tWORD DeclarationIntMemeLigne .

    $default  reduce using rule 51 (DeclarationIntMemeLigne)


State 78

   53 DeclarationIntEgalMemeLigne: tVIRG . tWORD tEGAL Exp DeclarationIntEgalMemeLigne

    tWORD  shift, and go to state 101


State 79

   48 Declaration: tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 102


State 80

   79 Arguments: tNOMBRE tVIRG $@20 . Arguments

    tINTEGER  shift, and go to state 37
    tNOMBRE   shift, and go to state 38
    tWORD     shift, and go to state 39

    $default  reduce using rule 83 (Arguments)

    Arguments  go to state 103


State 81

   77 Arguments: tWORD tVIRG Arguments .

    $default  reduce using rule 77 (Arguments)


State 82

   60 While: tWHILE $@11 tPO $@12 . Condition $@13 tPF tAO Input tAF

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 104
    Exp        go to state 85


State 83

   63 For: tFOR tPO Egalite tPOINTVIRG . $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF

    $default  reduce using rule 61 ($@14)

    $@14  go to state 105


State 84

   24 If: tIF tPO $@6 Condition . $@7 tPF tAO Input tAF $@8 Else
   36 Condition: Condition . tOR Condition
   37          | Condition . tAND Condition

    tOR   shift, and go to state 106
    tAND  shift, and go to state 107

    $default  reduce using rule 22 ($@7)

    $@7  go to state 108


State 85

   30 Condition: Exp . tEGALEGAL Exp
   31          | Exp . tNOTEGAL Exp
   32          | Exp . tSUP Exp
   33          | Exp . tINF Exp
   34          | Exp . tSUP tEGAL Exp
   35          | Exp . tINF tEGAL Exp
   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tDIV       shift, and go to state 68
    tPLUS      shift, and go to state 69
    tMINUS     shift, and go to state 70
    tSUP       shift, and go to state 109
    tINF       shift, and go to state 110
    tEGALEGAL  shift, and go to state 111
    tNOTEGAL   shift, and go to state 112
    tPOINTER   shift, and go to state 71


State 86

   66 Function: tINTEGER tWORD $@16 tPO . Arguments_Declaration tPF tAO Input $@17 tAF

    tINTEGER  shift, and go to state 87
    tCHAR     shift, and go to state 88
    tVOID     shift, and go to state 89

    $default  reduce using rule 76 (Arguments_Declaration)

    Arguments_Declaration  go to state 113


State 87

   71 Arguments_Declaration: tINTEGER . tWORD $@18 tVIRG Arguments_Declaration
   75                      | tINTEGER . tWORD $@19 Arguments_Declaration

    tWORD  shift, and go to state 114


State 88

   73 Arguments_Declaration: tCHAR . tWORD tVIRG Arguments_Declaration

    tWORD  shift, and go to state 115


State 89

   72 Arguments_Declaration: tVOID . tWORD tVIRG Arguments_Declaration

    tWORD  shift, and go to state 116


State 90

   67 Function: tCHAR tWORD tPO Arguments_Declaration . tPF tAO Input tAF

    tPF  shift, and go to state 117


State 91

   68 Function: tVOID tWORD tPO Arguments_Declaration . tPF tAO Input tAF

    tPF  shift, and go to state 118


State 92

   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   39    | Exp tDIV Exp .
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tMINUS  shift, and go to state 70

    tMINUS    [reduce using rule 39 (Exp)]
    $default  reduce using rule 39 (Exp)


State 93

   38 Exp: Exp . tPLUS Exp
   38    | Exp tPLUS Exp .
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 68
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    tMINUS    [reduce using rule 38 (Exp)]
    $default  reduce using rule 38 (Exp)


State 94

   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   40    | Exp tMINUS Exp .
   41    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    tDIV      [reduce using rule 40 (Exp)]
    tPLUS     [reduce using rule 40 (Exp)]
    tMINUS    [reduce using rule 40 (Exp)]
    tPOINTER  [reduce using rule 40 (Exp)]
    $default  reduce using rule 40 (Exp)


State 95

   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp
   41    | Exp tPOINTER Exp .

    tMINUS  shift, and go to state 70

    tMINUS    [reduce using rule 41 (Exp)]
    $default  reduce using rule 41 (Exp)


State 96

   18 Arg: tINTEGER tCO tCF . tWORD

    tWORD  shift, and go to state 119


State 97

   19 Arg: tINTEGER tPOINTER tWORD .

    $default  reduce using rule 19 (Arg)


State 98

   16 Main: tINTEGER tMAIN tPO Arg tPF tAO . $@5 Input tAF

    $default  reduce using rule 15 ($@5)

    $@5  go to state 120


State 99

   55 DeclarationIntTabMemeLigne: tVIRG . tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne

    tWORD  shift, and go to state 121


State 100

   49 Declaration: tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 122


State 101

   53 DeclarationIntEgalMemeLigne: tVIRG tWORD . tEGAL Exp DeclarationIntEgalMemeLigne

    tEGAL  shift, and go to state 123


State 102

   48 Declaration: tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG .

    $default  reduce using rule 48 (Declaration)


State 103

   79 Arguments: tNOMBRE tVIRG $@20 Arguments .

    $default  reduce using rule 79 (Arguments)


State 104

   36 Condition: Condition . tOR Condition
   37          | Condition . tAND Condition
   60 While: tWHILE $@11 tPO $@12 Condition . $@13 tPF tAO Input tAF

    tOR   shift, and go to state 106
    tAND  shift, and go to state 107

    $default  reduce using rule 59 ($@13)

    $@13  go to state 124


State 105

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 . Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 125
    Exp        go to state 85


State 106

   36 Condition: Condition tOR . Condition

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 126
    Exp        go to state 85


State 107

   37 Condition: Condition tAND . Condition

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 127
    Exp        go to state 85


State 108

   24 If: tIF tPO $@6 Condition $@7 . tPF tAO Input tAF $@8 Else

    tPF  shift, and go to state 128


State 109

   32 Condition: Exp tSUP . Exp
   34          | Exp tSUP . tEGAL Exp

    tMINUS   shift, and go to state 47
    tEGAL    shift, and go to state 129
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 130


State 110

   33 Condition: Exp tINF . Exp
   35          | Exp tINF . tEGAL Exp

    tMINUS   shift, and go to state 47
    tEGAL    shift, and go to state 131
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 132


State 111

   30 Condition: Exp tEGALEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 133


State 112

   31 Condition: Exp tNOTEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 134


State 113

   66 Function: tINTEGER tWORD $@16 tPO Arguments_Declaration . tPF tAO Input $@17 tAF

    tPF  shift, and go to state 135


State 114

   71 Arguments_Declaration: tINTEGER tWORD . $@18 tVIRG Arguments_Declaration
   75                      | tINTEGER tWORD . $@19 Arguments_Declaration

    tVIRG     reduce using rule 70 ($@18)
    $default  reduce using rule 74 ($@19)

    $@18  go to state 136
    $@19  go to state 137


State 115

   73 Arguments_Declaration: tCHAR tWORD . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 138


State 116

   72 Arguments_Declaration: tVOID tWORD . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 139


State 117

   67 Function: tCHAR tWORD tPO Arguments_Declaration tPF . tAO Input tAF

    tAO  shift, and go to state 140


State 118

   68 Function: tVOID tWORD tPO Arguments_Declaration tPF . tAO Input tAF

    tAO  shift, and go to state 141


State 119

   18 Arg: tINTEGER tCO tCF tWORD .

    $default  reduce using rule 18 (Arg)


State 120

   16 Main: tINTEGER tMAIN tPO Arg tPF tAO $@5 . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 142


State 121

   55 DeclarationIntTabMemeLigne: tVIRG tWORD . tCO tNOMBRE tCF DeclarationIntTabMemeLigne

    tCO  shift, and go to state 143


State 122

   49 Declaration: tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG .

    $default  reduce using rule 49 (Declaration)


State 123

   53 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL . Exp DeclarationIntEgalMemeLigne

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 144


State 124

   60 While: tWHILE $@11 tPO $@12 Condition $@13 . tPF tAO Input tAF

    tPF  shift, and go to state 145


State 125

   36 Condition: Condition . tOR Condition
   37          | Condition . tAND Condition
   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition . $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF

    tOR   shift, and go to state 106
    tAND  shift, and go to state 107

    $default  reduce using rule 62 ($@15)

    $@15  go to state 146


State 126

   36 Condition: Condition . tOR Condition
   36          | Condition tOR Condition .
   37          | Condition . tAND Condition

    tOR   shift, and go to state 106
    tAND  shift, and go to state 107

    tOR       [reduce using rule 36 (Condition)]
    tAND      [reduce using rule 36 (Condition)]
    $default  reduce using rule 36 (Condition)


State 127

   36 Condition: Condition . tOR Condition
   37          | Condition . tAND Condition
   37          | Condition tAND Condition .

    tOR   shift, and go to state 106
    tAND  shift, and go to state 107

    tOR       [reduce using rule 37 (Condition)]
    tAND      [reduce using rule 37 (Condition)]
    $default  reduce using rule 37 (Condition)


State 128

   24 If: tIF tPO $@6 Condition $@7 tPF . tAO Input tAF $@8 Else

    tAO  shift, and go to state 147


State 129

   34 Condition: Exp tSUP tEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 148


State 130

   32 Condition: Exp tSUP Exp .
   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 32 (Condition)


State 131

   35 Condition: Exp tINF tEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 149


State 132

   33 Condition: Exp tINF Exp .
   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 33 (Condition)


State 133

   30 Condition: Exp tEGALEGAL Exp .
   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 30 (Condition)


State 134

   31 Condition: Exp tNOTEGAL Exp .
   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 31 (Condition)


State 135

   66 Function: tINTEGER tWORD $@16 tPO Arguments_Declaration tPF . tAO Input $@17 tAF

    tAO  shift, and go to state 150


State 136

   71 Arguments_Declaration: tINTEGER tWORD $@18 . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 151


State 137

   75 Arguments_Declaration: tINTEGER tWORD $@19 . Arguments_Declaration

    tINTEGER  shift, and go to state 87
    tCHAR     shift, and go to state 88
    tVOID     shift, and go to state 89

    $default  reduce using rule 76 (Arguments_Declaration)

    Arguments_Declaration  go to state 152


State 138

   73 Arguments_Declaration: tCHAR tWORD tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 87
    tCHAR     shift, and go to state 88
    tVOID     shift, and go to state 89

    $default  reduce using rule 76 (Arguments_Declaration)

    Arguments_Declaration  go to state 153


State 139

   72 Arguments_Declaration: tVOID tWORD tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 87
    tCHAR     shift, and go to state 88
    tVOID     shift, and go to state 89

    $default  reduce using rule 76 (Arguments_Declaration)

    Arguments_Declaration  go to state 154


State 140

   67 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 155


State 141

   68 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 156


State 142

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   16 Main: tINTEGER tMAIN tPO Arg tPF tAO $@5 Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 157
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 143

   55 DeclarationIntTabMemeLigne: tVIRG tWORD tCO . tNOMBRE tCF DeclarationIntTabMemeLigne

    tNOMBRE  shift, and go to state 158


State 144

   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp
   53 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp . DeclarationIntEgalMemeLigne

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tVIRG     shift, and go to state 78
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 54 (DeclarationIntEgalMemeLigne)

    DeclarationIntEgalMemeLigne  go to state 159


State 145

   60 While: tWHILE $@11 tPO $@12 Condition $@13 tPF . tAO Input tAF

    tAO  shift, and go to state 160


State 146

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 . tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF

    tPOINTVIRG  shift, and go to state 161


State 147

   24 If: tIF tPO $@6 Condition $@7 tPF tAO . Input tAF $@8 Else

    $default  reduce using rule 1 (Input)

    Input  go to state 162


State 148

   34 Condition: Exp tSUP tEGAL Exp .
   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 34 (Condition)


State 149

   35 Condition: Exp tINF tEGAL Exp .
   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71

    $default  reduce using rule 35 (Condition)


State 150

   66 Function: tINTEGER tWORD $@16 tPO Arguments_Declaration tPF tAO . Input $@17 tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 163


State 151

   71 Arguments_Declaration: tINTEGER tWORD $@18 tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 87
    tCHAR     shift, and go to state 88
    tVOID     shift, and go to state 89

    $default  reduce using rule 76 (Arguments_Declaration)

    Arguments_Declaration  go to state 164


State 152

   75 Arguments_Declaration: tINTEGER tWORD $@19 Arguments_Declaration .

    $default  reduce using rule 75 (Arguments_Declaration)


State 153

   73 Arguments_Declaration: tCHAR tWORD tVIRG Arguments_Declaration .

    $default  reduce using rule 73 (Arguments_Declaration)


State 154

   72 Arguments_Declaration: tVOID tWORD tVIRG Arguments_Declaration .

    $default  reduce using rule 72 (Arguments_Declaration)


State 155

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   67 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 165
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 156

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   68 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 166
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 157

   16 Main: tINTEGER tMAIN tPO Arg tPF tAO $@5 Input tAF .

    $default  reduce using rule 16 (Main)


State 158

   55 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE . tCF DeclarationIntTabMemeLigne

    tCF  shift, and go to state 167


State 159

   53 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp DeclarationIntEgalMemeLigne .

    $default  reduce using rule 53 (DeclarationIntEgalMemeLigne)


State 160

   60 While: tWHILE $@11 tPO $@12 Condition $@13 tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 168


State 161

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG . tWORD tEGAL Exp tPF tAO Input tAF

    tWORD  shift, and go to state 169


State 162

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   24 If: tIF tPO $@6 Condition $@7 tPF tAO Input . tAF $@8 Else

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 170
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 163

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   66 Function: tINTEGER tWORD $@16 tPO Arguments_Declaration tPF tAO Input . $@17 tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)
    tAF       reduce using rule 65 ($@17)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    $@17            go to state 171
    Appel_Function  go to state 15


State 164

   71 Arguments_Declaration: tINTEGER tWORD $@18 tVIRG Arguments_Declaration .

    $default  reduce using rule 71 (Arguments_Declaration)


State 165

   67 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO Input tAF .

    $default  reduce using rule 67 (Function)


State 166

   68 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO Input tAF .

    $default  reduce using rule 68 (Function)


State 167

   55 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF . DeclarationIntTabMemeLigne

    tVIRG  shift, and go to state 99

    $default  reduce using rule 56 (DeclarationIntTabMemeLigne)

    DeclarationIntTabMemeLigne  go to state 172


State 168

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   60 While: tWHILE $@11 tPO $@12 Condition $@13 tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 173
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 169

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD . tEGAL Exp tPF tAO Input tAF

    tEGAL  shift, and go to state 174


State 170

   24 If: tIF tPO $@6 Condition $@7 tPF tAO Input tAF . $@8 Else

    $default  reduce using rule 23 ($@8)

    $@8  go to state 175


State 171

   66 Function: tINTEGER tWORD $@16 tPO Arguments_Declaration tPF tAO Input $@17 . tAF

    tAF  shift, and go to state 176


State 172

   55 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne .

    $default  reduce using rule 55 (DeclarationIntTabMemeLigne)


State 173

   60 While: tWHILE $@11 tPO $@12 Condition $@13 tPF tAO Input tAF .

    $default  reduce using rule 60 (While)


State 174

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL . Exp tPF tAO Input tAF

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 177


State 175

   24 If: tIF tPO $@6 Condition $@7 tPF tAO Input tAF $@8 . Else

    tELSE  shift, and go to state 178

    $default  reduce using rule 29 (Else)

    Else  go to state 179


State 176

   66 Function: tINTEGER tWORD $@16 tPO Arguments_Declaration tPF tAO Input $@17 tAF .

    $default  reduce using rule 66 (Function)


State 177

   38 Exp: Exp . tPLUS Exp
   39    | Exp . tDIV Exp
   40    | Exp . tMINUS Exp
   41    | Exp . tPOINTER Exp
   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp . tPF tAO Input tAF

    tPF       shift, and go to state 180
    tDIV      shift, and go to state 68
    tPLUS     shift, and go to state 69
    tMINUS    shift, and go to state 70
    tPOINTER  shift, and go to state 71


State 178

   26 Else: tELSE . $@9 tAO Input tAF
   28     | tELSE . $@10 If

    tIF       reduce using rule 27 ($@10)
    $default  reduce using rule 25 ($@9)

    $@9   go to state 181
    $@10  go to state 182


State 179

   24 If: tIF tPO $@6 Condition $@7 tPF tAO Input tAF $@8 Else .

    $default  reduce using rule 24 (If)


State 180

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF . tAO Input tAF

    tAO  shift, and go to state 183


State 181

   26 Else: tELSE $@9 . tAO Input tAF

    tAO  shift, and go to state 184


State 182

   28 Else: tELSE $@10 . If

    tIF  shift, and go to state 24

    If  go to state 185


State 183

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 186


State 184

   26 Else: tELSE $@9 tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 187


State 185

   28 Else: tELSE $@10 If .

    $default  reduce using rule 28 (Else)


State 186

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 188
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 187

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   26 Else: tELSE $@9 tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 189
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 188

   63 For: tFOR tPO Egalite tPOINTVIRG $@14 Condition $@15 tPOINTVIRG tWORD tEGAL Exp tPF tAO Input tAF .

    $default  reduce using rule 63 (For)


State 189

   26 Else: tELSE $@9 tAO Input tAF .

    $default  reduce using rule 26 (Else)
