Terminals unused in grammar

   tNULL
   tCONST
   tSQ
   tDQ
   tARROW
   tPOINT
   tMOD
   tEXP
   tADDR
   tSPACE
   tRETURN
   tCOMMENT
   tMOINS


State 1 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 4 shift/reduce
State 101 conflicts: 1 shift/reduce
State 112 conflicts: 2 shift/reduce
State 113 conflicts: 2 shift/reduce
State 144 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce
State 163 conflicts: 1 shift/reduce
State 180 conflicts: 1 shift/reduce
State 184 conflicts: 1 shift/reduce


Grammar

    0 $accept: Input $end

    1 Input: %empty
    2      | Input tNEWLINE
    3      | Input Egalite tPOINTVIRG
    4      | Input Declaration

    5 $@1: %empty

    6 Input: Input $@1 While

    7 $@2: %empty

    8 Input: Input $@2 For

    9 $@3: %empty

   10 Input: Input $@3 If

   11 $@4: %empty

   12 Input: Input $@4 Function
   13      | Input Appel_Function
   14      | Input Main

   15 $@5: %empty

   16 Main: tINTEGER tMAIN tPO Arg tPF tAO $@5 Input tAF

   17 Arg: tINTEGER tWORD
   18    | tINTEGER tCO tCF tWORD
   19    | tINTEGER tPOINTER tWORD
   20    | %empty

   21 $@6: %empty

   22 $@7: %empty

   23 If: tIF tPO Condition $@6 tPF tAO Input tAF $@7 Else

   24 $@8: %empty

   25 Else: tELSE $@8 tAO Input tAF

   26 $@9: %empty

   27 Else: tELSE $@9 If
   28     | %empty

   29 Condition: Exp tEGALEGAL Exp
   30          | Exp tNOTEGAL Exp
   31          | Exp tSUP Exp
   32          | Exp tINF Exp
   33          | Exp tSUP tEGAL Exp
   34          | Exp tINF tEGAL Exp
   35          | Condition tOR Condition
   36          | Condition tAND Condition

   37 Exp: Exp tPLUS Exp
   38    | Exp tDIV Exp
   39    | Exp tMINUS Exp
   40    | Exp tPOINTER Exp
   41    | tMINUS Exp
   42    | tNOMBRE
   43    | tWORD

   44 LeftTerm: tWORD

   45 Egalite: LeftTerm tEGAL Exp

   46 Declaration: tINTEGER tWORD DeclarationIntMemeLigne tPOINTVIRG
   47            | tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   48            | tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG
   49            | error tPOINTVIRG

   50 DeclarationIntMemeLigne: tVIRG tWORD DeclarationIntMemeLigne
   51                        | %empty

   52 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp DeclarationIntEgalMemeLigne
   53                            | %empty

   54 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne
   55                           | %empty

   56 $@10: %empty

   57 $@11: %empty

   58 While: tWHILE $@10 tPO Condition $@11 tPF tAO Input tAF

   59 $@12: %empty

   60 $@13: %empty

   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite tPF tAO Input tAF

   62 $@14: %empty

   63 $@15: %empty

   64 Function: tINTEGER tWORD $@14 tPO Arguments_Declaration tPF tAO Input $@15 tAF
   65         | tCHAR tWORD tPO Arguments_Declaration tPF tAO Input tAF
   66         | tVOID tWORD tPO Arguments_Declaration tPF tAO Input tAF

   67 Appel_Function: tWORD tPO Arguments tPF

   68 $@16: %empty

   69 Arguments_Declaration: tINTEGER tWORD $@16 tVIRG Arguments_Declaration
   70                      | tVOID tWORD tVIRG Arguments_Declaration
   71                      | tCHAR tWORD tVIRG Arguments_Declaration

   72 $@17: %empty

   73 Arguments_Declaration: tINTEGER tWORD $@17 Arguments_Declaration
   74                      | %empty

   75 Arguments: tWORD tVIRG Arguments

   76 $@18: %empty

   77 Arguments: tNOMBRE tVIRG $@18 Arguments
   78          | tWORD
   79          | tINTEGER
   80          | tNOMBRE
   81          | %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 49
tINTEGER (258) 16 17 18 19 46 47 48 64 69 73 79
tCHAR (259) 65 71
tVOID (260) 66 70
tNULL (261)
tCONST (262)
tMAIN (263) 16
tIF (264) 23
tELSE (265) 25 27
tWHILE (266) 58
tFOR (267) 61
tAO (268) 16 23 25 58 61 64 65 66
tAF (269) 16 23 25 58 61 64 65 66
tCO (270) 18 48 54
tCF (271) 18 48 54
tPO (272) 16 23 58 61 64 65 66 67
tPF (273) 16 23 58 61 64 65 66 67
tSQ (274)
tDQ (275)
tDIV (276) 38
tPOINTVIRG (277) 3 46 47 48 49 61
tARROW (278)
tPOINT (279)
tPLUS (280) 37
tMINUS (281) 39 41
tMOD (282)
tEXP (283)
tSUP (284) 31 33
tINF (285) 32 34
tVIRG (286) 50 52 54 69 70 71 75 77
tEGALEGAL (287) 29
tOR (288) 35
tAND (289) 36
tNOTEGAL (290) 30
tEGAL (291) 33 34 45 47 52
tADDR (292)
tPOINTER (293) 19 40
tSPACE (294)
tNOMBRE (295) 42 48 54 77 80
tWORD (296) 17 18 19 43 44 46 47 48 50 52 54 64 65 66 67 69 70 71 73
    75 78
tRETURN (297)
tNEWLINE (298) 2
tCOMMENT (299)
tMOINS (300)
NEG (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Input (48)
    on left: 1 2 3 4 6 8 10 12 13 14, on right: 0 2 3 4 6 8 10 12 13
    14 16 23 25 58 61 64 65 66
$@1 (49)
    on left: 5, on right: 6
$@2 (50)
    on left: 7, on right: 8
$@3 (51)
    on left: 9, on right: 10
$@4 (52)
    on left: 11, on right: 12
Main (53)
    on left: 16, on right: 14
$@5 (54)
    on left: 15, on right: 16
Arg (55)
    on left: 17 18 19 20, on right: 16
If (56)
    on left: 23, on right: 10 27
$@6 (57)
    on left: 21, on right: 23
$@7 (58)
    on left: 22, on right: 23
Else (59)
    on left: 25 27 28, on right: 23
$@8 (60)
    on left: 24, on right: 25
$@9 (61)
    on left: 26, on right: 27
Condition (62)
    on left: 29 30 31 32 33 34 35 36, on right: 23 35 36 58 61
Exp (63)
    on left: 37 38 39 40 41 42 43, on right: 29 30 31 32 33 34 37 38
    39 40 41 45 47 52
LeftTerm (64)
    on left: 44, on right: 45
Egalite (65)
    on left: 45, on right: 3 61
Declaration (66)
    on left: 46 47 48 49, on right: 4
DeclarationIntMemeLigne (67)
    on left: 50 51, on right: 46 50
DeclarationIntEgalMemeLigne (68)
    on left: 52 53, on right: 47 52
DeclarationIntTabMemeLigne (69)
    on left: 54 55, on right: 48 54
While (70)
    on left: 58, on right: 6
$@10 (71)
    on left: 56, on right: 58
$@11 (72)
    on left: 57, on right: 58
For (73)
    on left: 61, on right: 8
$@12 (74)
    on left: 59, on right: 61
$@13 (75)
    on left: 60, on right: 61
Function (76)
    on left: 64 65 66, on right: 12
$@14 (77)
    on left: 62, on right: 64
$@15 (78)
    on left: 63, on right: 64
Appel_Function (79)
    on left: 67, on right: 13
Arguments_Declaration (80)
    on left: 69 70 71 73 74, on right: 64 65 66 69 70 71 73
$@16 (81)
    on left: 68, on right: 69
$@17 (82)
    on left: 72, on right: 73
Arguments (83)
    on left: 75 77 78 79 80 81, on right: 67 75 77
$@18 (84)
    on left: 76, on right: 77


State 0

    0 $accept: . Input $end

    $default  reduce using rule 1 (Input)

    Input  go to state 1


State 1

    0 $accept: Input . $end
    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main

    $end      shift, and go to state 2
    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 2

    0 $accept: Input $end .

    $default  accept


State 3

   49 Declaration: error . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 16


State 4

   16 Main: tINTEGER . tMAIN tPO Arg tPF tAO $@5 Input tAF
   46 Declaration: tINTEGER . tWORD DeclarationIntMemeLigne tPOINTVIRG
   47            | tINTEGER . tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   48            | tINTEGER . tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tMAIN  shift, and go to state 17
    tWORD  shift, and go to state 18


State 5

   44 LeftTerm: tWORD .
   67 Appel_Function: tWORD . tPO Arguments tPF

    tPO  shift, and go to state 19

    $default  reduce using rule 44 (LeftTerm)


State 6

    2 Input: Input tNEWLINE .

    $default  reduce using rule 2 (Input)


State 7

    6 Input: Input $@1 . While

    tWHILE  shift, and go to state 20

    While  go to state 21


State 8

    8 Input: Input $@2 . For

    tFOR  shift, and go to state 22

    For  go to state 23


State 9

   10 Input: Input $@3 . If

    tIF  shift, and go to state 24

    If  go to state 25


State 10

   12 Input: Input $@4 . Function

    tINTEGER  shift, and go to state 26
    tCHAR     shift, and go to state 27
    tVOID     shift, and go to state 28

    Function  go to state 29


State 11

   14 Input: Input Main .

    $default  reduce using rule 14 (Input)


State 12

   45 Egalite: LeftTerm . tEGAL Exp

    tEGAL  shift, and go to state 30


State 13

    3 Input: Input Egalite . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 31


State 14

    4 Input: Input Declaration .

    $default  reduce using rule 4 (Input)


State 15

   13 Input: Input Appel_Function .

    $default  reduce using rule 13 (Input)


State 16

   49 Declaration: error tPOINTVIRG .

    $default  reduce using rule 49 (Declaration)


State 17

   16 Main: tINTEGER tMAIN . tPO Arg tPF tAO $@5 Input tAF

    tPO  shift, and go to state 32


State 18

   46 Declaration: tINTEGER tWORD . DeclarationIntMemeLigne tPOINTVIRG
   47            | tINTEGER tWORD . tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG
   48            | tINTEGER tWORD . tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tCO    shift, and go to state 33
    tVIRG  shift, and go to state 34
    tEGAL  shift, and go to state 35

    $default  reduce using rule 51 (DeclarationIntMemeLigne)

    DeclarationIntMemeLigne  go to state 36


State 19

   67 Appel_Function: tWORD tPO . Arguments tPF

    tINTEGER  shift, and go to state 37
    tNOMBRE   shift, and go to state 38
    tWORD     shift, and go to state 39

    $default  reduce using rule 81 (Arguments)

    Arguments  go to state 40


State 20

   58 While: tWHILE . $@10 tPO Condition $@11 tPF tAO Input tAF

    $default  reduce using rule 56 ($@10)

    $@10  go to state 41


State 21

    6 Input: Input $@1 While .

    $default  reduce using rule 6 (Input)


State 22

   61 For: tFOR . tPO Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite tPF tAO Input tAF

    tPO  shift, and go to state 42


State 23

    8 Input: Input $@2 For .

    $default  reduce using rule 8 (Input)


State 24

   23 If: tIF . tPO Condition $@6 tPF tAO Input tAF $@7 Else

    tPO  shift, and go to state 43


State 25

   10 Input: Input $@3 If .

    $default  reduce using rule 10 (Input)


State 26

   64 Function: tINTEGER . tWORD $@14 tPO Arguments_Declaration tPF tAO Input $@15 tAF

    tWORD  shift, and go to state 44


State 27

   65 Function: tCHAR . tWORD tPO Arguments_Declaration tPF tAO Input tAF

    tWORD  shift, and go to state 45


State 28

   66 Function: tVOID . tWORD tPO Arguments_Declaration tPF tAO Input tAF

    tWORD  shift, and go to state 46


State 29

   12 Input: Input $@4 Function .

    $default  reduce using rule 12 (Input)


State 30

   45 Egalite: LeftTerm tEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 50


State 31

    3 Input: Input Egalite tPOINTVIRG .

    $default  reduce using rule 3 (Input)


State 32

   16 Main: tINTEGER tMAIN tPO . Arg tPF tAO $@5 Input tAF

    tINTEGER  shift, and go to state 51

    $default  reduce using rule 20 (Arg)

    Arg  go to state 52


State 33

   48 Declaration: tINTEGER tWORD tCO . tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tNOMBRE  shift, and go to state 53


State 34

   50 DeclarationIntMemeLigne: tVIRG . tWORD DeclarationIntMemeLigne

    tWORD  shift, and go to state 54


State 35

   47 Declaration: tINTEGER tWORD tEGAL . Exp DeclarationIntEgalMemeLigne tPOINTVIRG

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 55


State 36

   46 Declaration: tINTEGER tWORD DeclarationIntMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 56


State 37

   79 Arguments: tINTEGER .

    $default  reduce using rule 79 (Arguments)


State 38

   77 Arguments: tNOMBRE . tVIRG $@18 Arguments
   80          | tNOMBRE .

    tVIRG  shift, and go to state 57

    $default  reduce using rule 80 (Arguments)


State 39

   75 Arguments: tWORD . tVIRG Arguments
   78          | tWORD .

    tVIRG  shift, and go to state 58

    $default  reduce using rule 78 (Arguments)


State 40

   67 Appel_Function: tWORD tPO Arguments . tPF

    tPF  shift, and go to state 59


State 41

   58 While: tWHILE $@10 . tPO Condition $@11 tPF tAO Input tAF

    tPO  shift, and go to state 60


State 42

   61 For: tFOR tPO . Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite tPF tAO Input tAF

    tWORD  shift, and go to state 61

    LeftTerm  go to state 12
    Egalite   go to state 62


State 43

   23 If: tIF tPO . Condition $@6 tPF tAO Input tAF $@7 Else

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 63
    Exp        go to state 64


State 44

   64 Function: tINTEGER tWORD . $@14 tPO Arguments_Declaration tPF tAO Input $@15 tAF

    $default  reduce using rule 62 ($@14)

    $@14  go to state 65


State 45

   65 Function: tCHAR tWORD . tPO Arguments_Declaration tPF tAO Input tAF

    tPO  shift, and go to state 66


State 46

   66 Function: tVOID tWORD . tPO Arguments_Declaration tPF tAO Input tAF

    tPO  shift, and go to state 67


State 47

   41 Exp: tMINUS . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 68


State 48

   42 Exp: tNOMBRE .

    $default  reduce using rule 42 (Exp)


State 49

   43 Exp: tWORD .

    $default  reduce using rule 43 (Exp)


State 50

   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp
   45 Egalite: LeftTerm tEGAL Exp .

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 45 (Egalite)


State 51

   17 Arg: tINTEGER . tWORD
   18    | tINTEGER . tCO tCF tWORD
   19    | tINTEGER . tPOINTER tWORD

    tCO       shift, and go to state 73
    tPOINTER  shift, and go to state 74
    tWORD     shift, and go to state 75


State 52

   16 Main: tINTEGER tMAIN tPO Arg . tPF tAO $@5 Input tAF

    tPF  shift, and go to state 76


State 53

   48 Declaration: tINTEGER tWORD tCO tNOMBRE . tCF DeclarationIntTabMemeLigne tPOINTVIRG

    tCF  shift, and go to state 77


State 54

   50 DeclarationIntMemeLigne: tVIRG tWORD . DeclarationIntMemeLigne

    tVIRG  shift, and go to state 34

    $default  reduce using rule 51 (DeclarationIntMemeLigne)

    DeclarationIntMemeLigne  go to state 78


State 55

   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp
   47 Declaration: tINTEGER tWORD tEGAL Exp . DeclarationIntEgalMemeLigne tPOINTVIRG

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tVIRG     shift, and go to state 79
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 53 (DeclarationIntEgalMemeLigne)

    DeclarationIntEgalMemeLigne  go to state 80


State 56

   46 Declaration: tINTEGER tWORD DeclarationIntMemeLigne tPOINTVIRG .

    $default  reduce using rule 46 (Declaration)


State 57

   77 Arguments: tNOMBRE tVIRG . $@18 Arguments

    $default  reduce using rule 76 ($@18)

    $@18  go to state 81


State 58

   75 Arguments: tWORD tVIRG . Arguments

    tINTEGER  shift, and go to state 37
    tNOMBRE   shift, and go to state 38
    tWORD     shift, and go to state 39

    $default  reduce using rule 81 (Arguments)

    Arguments  go to state 82


State 59

   67 Appel_Function: tWORD tPO Arguments tPF .

    $default  reduce using rule 67 (Appel_Function)


State 60

   58 While: tWHILE $@10 tPO . Condition $@11 tPF tAO Input tAF

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 83
    Exp        go to state 64


State 61

   44 LeftTerm: tWORD .

    $default  reduce using rule 44 (LeftTerm)


State 62

   61 For: tFOR tPO Egalite . tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite tPF tAO Input tAF

    tPOINTVIRG  shift, and go to state 84


State 63

   23 If: tIF tPO Condition . $@6 tPF tAO Input tAF $@7 Else
   35 Condition: Condition . tOR Condition
   36          | Condition . tAND Condition

    tOR   shift, and go to state 85
    tAND  shift, and go to state 86

    $default  reduce using rule 21 ($@6)

    $@6  go to state 87


State 64

   29 Condition: Exp . tEGALEGAL Exp
   30          | Exp . tNOTEGAL Exp
   31          | Exp . tSUP Exp
   32          | Exp . tINF Exp
   33          | Exp . tSUP tEGAL Exp
   34          | Exp . tINF tEGAL Exp
   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tDIV       shift, and go to state 69
    tPLUS      shift, and go to state 70
    tMINUS     shift, and go to state 71
    tSUP       shift, and go to state 88
    tINF       shift, and go to state 89
    tEGALEGAL  shift, and go to state 90
    tNOTEGAL   shift, and go to state 91
    tPOINTER   shift, and go to state 72


State 65

   64 Function: tINTEGER tWORD $@14 . tPO Arguments_Declaration tPF tAO Input $@15 tAF

    tPO  shift, and go to state 92


State 66

   65 Function: tCHAR tWORD tPO . Arguments_Declaration tPF tAO Input tAF

    tINTEGER  shift, and go to state 93
    tCHAR     shift, and go to state 94
    tVOID     shift, and go to state 95

    $default  reduce using rule 74 (Arguments_Declaration)

    Arguments_Declaration  go to state 96


State 67

   66 Function: tVOID tWORD tPO . Arguments_Declaration tPF tAO Input tAF

    tINTEGER  shift, and go to state 93
    tCHAR     shift, and go to state 94
    tVOID     shift, and go to state 95

    $default  reduce using rule 74 (Arguments_Declaration)

    Arguments_Declaration  go to state 97


State 68

   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp
   41    | tMINUS Exp .

    tMINUS  shift, and go to state 71

    tMINUS    [reduce using rule 41 (Exp)]
    $default  reduce using rule 41 (Exp)


State 69

   38 Exp: Exp tDIV . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 98


State 70

   37 Exp: Exp tPLUS . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 99


State 71

   39 Exp: Exp tMINUS . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 100


State 72

   40 Exp: Exp tPOINTER . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 101


State 73

   18 Arg: tINTEGER tCO . tCF tWORD

    tCF  shift, and go to state 102


State 74

   19 Arg: tINTEGER tPOINTER . tWORD

    tWORD  shift, and go to state 103


State 75

   17 Arg: tINTEGER tWORD .

    $default  reduce using rule 17 (Arg)


State 76

   16 Main: tINTEGER tMAIN tPO Arg tPF . tAO $@5 Input tAF

    tAO  shift, and go to state 104


State 77

   48 Declaration: tINTEGER tWORD tCO tNOMBRE tCF . DeclarationIntTabMemeLigne tPOINTVIRG

    tVIRG  shift, and go to state 105

    $default  reduce using rule 55 (DeclarationIntTabMemeLigne)

    DeclarationIntTabMemeLigne  go to state 106


State 78

   50 DeclarationIntMemeLigne: tVIRG tWORD DeclarationIntMemeLigne .

    $default  reduce using rule 50 (DeclarationIntMemeLigne)


State 79

   52 DeclarationIntEgalMemeLigne: tVIRG . tWORD tEGAL Exp DeclarationIntEgalMemeLigne

    tWORD  shift, and go to state 107


State 80

   47 Declaration: tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 108


State 81

   77 Arguments: tNOMBRE tVIRG $@18 . Arguments

    tINTEGER  shift, and go to state 37
    tNOMBRE   shift, and go to state 38
    tWORD     shift, and go to state 39

    $default  reduce using rule 81 (Arguments)

    Arguments  go to state 109


State 82

   75 Arguments: tWORD tVIRG Arguments .

    $default  reduce using rule 75 (Arguments)


State 83

   35 Condition: Condition . tOR Condition
   36          | Condition . tAND Condition
   58 While: tWHILE $@10 tPO Condition . $@11 tPF tAO Input tAF

    tOR   shift, and go to state 85
    tAND  shift, and go to state 86

    $default  reduce using rule 57 ($@11)

    $@11  go to state 110


State 84

   61 For: tFOR tPO Egalite tPOINTVIRG . $@12 Condition $@13 tPOINTVIRG Egalite tPF tAO Input tAF

    $default  reduce using rule 59 ($@12)

    $@12  go to state 111


State 85

   35 Condition: Condition tOR . Condition

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 112
    Exp        go to state 64


State 86

   36 Condition: Condition tAND . Condition

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 113
    Exp        go to state 64


State 87

   23 If: tIF tPO Condition $@6 . tPF tAO Input tAF $@7 Else

    tPF  shift, and go to state 114


State 88

   31 Condition: Exp tSUP . Exp
   33          | Exp tSUP . tEGAL Exp

    tMINUS   shift, and go to state 47
    tEGAL    shift, and go to state 115
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 116


State 89

   32 Condition: Exp tINF . Exp
   34          | Exp tINF . tEGAL Exp

    tMINUS   shift, and go to state 47
    tEGAL    shift, and go to state 117
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 118


State 90

   29 Condition: Exp tEGALEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 119


State 91

   30 Condition: Exp tNOTEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 120


State 92

   64 Function: tINTEGER tWORD $@14 tPO . Arguments_Declaration tPF tAO Input $@15 tAF

    tINTEGER  shift, and go to state 93
    tCHAR     shift, and go to state 94
    tVOID     shift, and go to state 95

    $default  reduce using rule 74 (Arguments_Declaration)

    Arguments_Declaration  go to state 121


State 93

   69 Arguments_Declaration: tINTEGER . tWORD $@16 tVIRG Arguments_Declaration
   73                      | tINTEGER . tWORD $@17 Arguments_Declaration

    tWORD  shift, and go to state 122


State 94

   71 Arguments_Declaration: tCHAR . tWORD tVIRG Arguments_Declaration

    tWORD  shift, and go to state 123


State 95

   70 Arguments_Declaration: tVOID . tWORD tVIRG Arguments_Declaration

    tWORD  shift, and go to state 124


State 96

   65 Function: tCHAR tWORD tPO Arguments_Declaration . tPF tAO Input tAF

    tPF  shift, and go to state 125


State 97

   66 Function: tVOID tWORD tPO Arguments_Declaration . tPF tAO Input tAF

    tPF  shift, and go to state 126


State 98

   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   38    | Exp tDIV Exp .
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tMINUS  shift, and go to state 71

    tMINUS    [reduce using rule 38 (Exp)]
    $default  reduce using rule 38 (Exp)


State 99

   37 Exp: Exp . tPLUS Exp
   37    | Exp tPLUS Exp .
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 69
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    tMINUS    [reduce using rule 37 (Exp)]
    $default  reduce using rule 37 (Exp)


State 100

   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   39    | Exp tMINUS Exp .
   40    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    tDIV      [reduce using rule 39 (Exp)]
    tPLUS     [reduce using rule 39 (Exp)]
    tMINUS    [reduce using rule 39 (Exp)]
    tPOINTER  [reduce using rule 39 (Exp)]
    $default  reduce using rule 39 (Exp)


State 101

   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp
   40    | Exp tPOINTER Exp .

    tMINUS  shift, and go to state 71

    tMINUS    [reduce using rule 40 (Exp)]
    $default  reduce using rule 40 (Exp)


State 102

   18 Arg: tINTEGER tCO tCF . tWORD

    tWORD  shift, and go to state 127


State 103

   19 Arg: tINTEGER tPOINTER tWORD .

    $default  reduce using rule 19 (Arg)


State 104

   16 Main: tINTEGER tMAIN tPO Arg tPF tAO . $@5 Input tAF

    $default  reduce using rule 15 ($@5)

    $@5  go to state 128


State 105

   54 DeclarationIntTabMemeLigne: tVIRG . tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne

    tWORD  shift, and go to state 129


State 106

   48 Declaration: tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne . tPOINTVIRG

    tPOINTVIRG  shift, and go to state 130


State 107

   52 DeclarationIntEgalMemeLigne: tVIRG tWORD . tEGAL Exp DeclarationIntEgalMemeLigne

    tEGAL  shift, and go to state 131


State 108

   47 Declaration: tINTEGER tWORD tEGAL Exp DeclarationIntEgalMemeLigne tPOINTVIRG .

    $default  reduce using rule 47 (Declaration)


State 109

   77 Arguments: tNOMBRE tVIRG $@18 Arguments .

    $default  reduce using rule 77 (Arguments)


State 110

   58 While: tWHILE $@10 tPO Condition $@11 . tPF tAO Input tAF

    tPF  shift, and go to state 132


State 111

   61 For: tFOR tPO Egalite tPOINTVIRG $@12 . Condition $@13 tPOINTVIRG Egalite tPF tAO Input tAF

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Condition  go to state 133
    Exp        go to state 64


State 112

   35 Condition: Condition . tOR Condition
   35          | Condition tOR Condition .
   36          | Condition . tAND Condition

    tOR   shift, and go to state 85
    tAND  shift, and go to state 86

    tOR       [reduce using rule 35 (Condition)]
    tAND      [reduce using rule 35 (Condition)]
    $default  reduce using rule 35 (Condition)


State 113

   35 Condition: Condition . tOR Condition
   36          | Condition . tAND Condition
   36          | Condition tAND Condition .

    tOR   shift, and go to state 85
    tAND  shift, and go to state 86

    tOR       [reduce using rule 36 (Condition)]
    tAND      [reduce using rule 36 (Condition)]
    $default  reduce using rule 36 (Condition)


State 114

   23 If: tIF tPO Condition $@6 tPF . tAO Input tAF $@7 Else

    tAO  shift, and go to state 134


State 115

   33 Condition: Exp tSUP tEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 135


State 116

   31 Condition: Exp tSUP Exp .
   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 31 (Condition)


State 117

   34 Condition: Exp tINF tEGAL . Exp

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 136


State 118

   32 Condition: Exp tINF Exp .
   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 32 (Condition)


State 119

   29 Condition: Exp tEGALEGAL Exp .
   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 29 (Condition)


State 120

   30 Condition: Exp tNOTEGAL Exp .
   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 30 (Condition)


State 121

   64 Function: tINTEGER tWORD $@14 tPO Arguments_Declaration . tPF tAO Input $@15 tAF

    tPF  shift, and go to state 137


State 122

   69 Arguments_Declaration: tINTEGER tWORD . $@16 tVIRG Arguments_Declaration
   73                      | tINTEGER tWORD . $@17 Arguments_Declaration

    tVIRG     reduce using rule 68 ($@16)
    $default  reduce using rule 72 ($@17)

    $@16  go to state 138
    $@17  go to state 139


State 123

   71 Arguments_Declaration: tCHAR tWORD . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 140


State 124

   70 Arguments_Declaration: tVOID tWORD . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 141


State 125

   65 Function: tCHAR tWORD tPO Arguments_Declaration tPF . tAO Input tAF

    tAO  shift, and go to state 142


State 126

   66 Function: tVOID tWORD tPO Arguments_Declaration tPF . tAO Input tAF

    tAO  shift, and go to state 143


State 127

   18 Arg: tINTEGER tCO tCF tWORD .

    $default  reduce using rule 18 (Arg)


State 128

   16 Main: tINTEGER tMAIN tPO Arg tPF tAO $@5 . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 144


State 129

   54 DeclarationIntTabMemeLigne: tVIRG tWORD . tCO tNOMBRE tCF DeclarationIntTabMemeLigne

    tCO  shift, and go to state 145


State 130

   48 Declaration: tINTEGER tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne tPOINTVIRG .

    $default  reduce using rule 48 (Declaration)


State 131

   52 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL . Exp DeclarationIntEgalMemeLigne

    tMINUS   shift, and go to state 47
    tNOMBRE  shift, and go to state 48
    tWORD    shift, and go to state 49

    Exp  go to state 146


State 132

   58 While: tWHILE $@10 tPO Condition $@11 tPF . tAO Input tAF

    tAO  shift, and go to state 147


State 133

   35 Condition: Condition . tOR Condition
   36          | Condition . tAND Condition
   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition . $@13 tPOINTVIRG Egalite tPF tAO Input tAF

    tOR   shift, and go to state 85
    tAND  shift, and go to state 86

    $default  reduce using rule 60 ($@13)

    $@13  go to state 148


State 134

   23 If: tIF tPO Condition $@6 tPF tAO . Input tAF $@7 Else

    $default  reduce using rule 1 (Input)

    Input  go to state 149


State 135

   33 Condition: Exp tSUP tEGAL Exp .
   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 33 (Condition)


State 136

   34 Condition: Exp tINF tEGAL Exp .
   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 34 (Condition)


State 137

   64 Function: tINTEGER tWORD $@14 tPO Arguments_Declaration tPF . tAO Input $@15 tAF

    tAO  shift, and go to state 150


State 138

   69 Arguments_Declaration: tINTEGER tWORD $@16 . tVIRG Arguments_Declaration

    tVIRG  shift, and go to state 151


State 139

   73 Arguments_Declaration: tINTEGER tWORD $@17 . Arguments_Declaration

    tINTEGER  shift, and go to state 93
    tCHAR     shift, and go to state 94
    tVOID     shift, and go to state 95

    $default  reduce using rule 74 (Arguments_Declaration)

    Arguments_Declaration  go to state 152


State 140

   71 Arguments_Declaration: tCHAR tWORD tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 93
    tCHAR     shift, and go to state 94
    tVOID     shift, and go to state 95

    $default  reduce using rule 74 (Arguments_Declaration)

    Arguments_Declaration  go to state 153


State 141

   70 Arguments_Declaration: tVOID tWORD tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 93
    tCHAR     shift, and go to state 94
    tVOID     shift, and go to state 95

    $default  reduce using rule 74 (Arguments_Declaration)

    Arguments_Declaration  go to state 154


State 142

   65 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 155


State 143

   66 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 156


State 144

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   16 Main: tINTEGER tMAIN tPO Arg tPF tAO $@5 Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 157
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 145

   54 DeclarationIntTabMemeLigne: tVIRG tWORD tCO . tNOMBRE tCF DeclarationIntTabMemeLigne

    tNOMBRE  shift, and go to state 158


State 146

   37 Exp: Exp . tPLUS Exp
   38    | Exp . tDIV Exp
   39    | Exp . tMINUS Exp
   40    | Exp . tPOINTER Exp
   52 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp . DeclarationIntEgalMemeLigne

    tDIV      shift, and go to state 69
    tPLUS     shift, and go to state 70
    tMINUS    shift, and go to state 71
    tVIRG     shift, and go to state 79
    tPOINTER  shift, and go to state 72

    $default  reduce using rule 53 (DeclarationIntEgalMemeLigne)

    DeclarationIntEgalMemeLigne  go to state 159


State 147

   58 While: tWHILE $@10 tPO Condition $@11 tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 160


State 148

   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition $@13 . tPOINTVIRG Egalite tPF tAO Input tAF

    tPOINTVIRG  shift, and go to state 161


State 149

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   23 If: tIF tPO Condition $@6 tPF tAO Input . tAF $@7 Else

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 162
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 150

   64 Function: tINTEGER tWORD $@14 tPO Arguments_Declaration tPF tAO . Input $@15 tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 163


State 151

   69 Arguments_Declaration: tINTEGER tWORD $@16 tVIRG . Arguments_Declaration

    tINTEGER  shift, and go to state 93
    tCHAR     shift, and go to state 94
    tVOID     shift, and go to state 95

    $default  reduce using rule 74 (Arguments_Declaration)

    Arguments_Declaration  go to state 164


State 152

   73 Arguments_Declaration: tINTEGER tWORD $@17 Arguments_Declaration .

    $default  reduce using rule 73 (Arguments_Declaration)


State 153

   71 Arguments_Declaration: tCHAR tWORD tVIRG Arguments_Declaration .

    $default  reduce using rule 71 (Arguments_Declaration)


State 154

   70 Arguments_Declaration: tVOID tWORD tVIRG Arguments_Declaration .

    $default  reduce using rule 70 (Arguments_Declaration)


State 155

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   65 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 165
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 156

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   66 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 166
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 157

   16 Main: tINTEGER tMAIN tPO Arg tPF tAO $@5 Input tAF .

    $default  reduce using rule 16 (Main)


State 158

   54 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE . tCF DeclarationIntTabMemeLigne

    tCF  shift, and go to state 167


State 159

   52 DeclarationIntEgalMemeLigne: tVIRG tWORD tEGAL Exp DeclarationIntEgalMemeLigne .

    $default  reduce using rule 52 (DeclarationIntEgalMemeLigne)


State 160

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   58 While: tWHILE $@10 tPO Condition $@11 tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 168
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 161

   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG . Egalite tPF tAO Input tAF

    tWORD  shift, and go to state 61

    LeftTerm  go to state 12
    Egalite   go to state 169


State 162

   23 If: tIF tPO Condition $@6 tPF tAO Input tAF . $@7 Else

    $default  reduce using rule 22 ($@7)

    $@7  go to state 170


State 163

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   64 Function: tINTEGER tWORD $@14 tPO Arguments_Declaration tPF tAO Input . $@15 tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)
    tAF       reduce using rule 63 ($@15)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    $@15            go to state 171
    Appel_Function  go to state 15


State 164

   69 Arguments_Declaration: tINTEGER tWORD $@16 tVIRG Arguments_Declaration .

    $default  reduce using rule 69 (Arguments_Declaration)


State 165

   65 Function: tCHAR tWORD tPO Arguments_Declaration tPF tAO Input tAF .

    $default  reduce using rule 65 (Function)


State 166

   66 Function: tVOID tWORD tPO Arguments_Declaration tPF tAO Input tAF .

    $default  reduce using rule 66 (Function)


State 167

   54 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF . DeclarationIntTabMemeLigne

    tVIRG  shift, and go to state 105

    $default  reduce using rule 55 (DeclarationIntTabMemeLigne)

    DeclarationIntTabMemeLigne  go to state 172


State 168

   58 While: tWHILE $@10 tPO Condition $@11 tPF tAO Input tAF .

    $default  reduce using rule 58 (While)


State 169

   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite . tPF tAO Input tAF

    tPF  shift, and go to state 173


State 170

   23 If: tIF tPO Condition $@6 tPF tAO Input tAF $@7 . Else

    tELSE  shift, and go to state 174

    $default  reduce using rule 28 (Else)

    Else  go to state 175


State 171

   64 Function: tINTEGER tWORD $@14 tPO Arguments_Declaration tPF tAO Input $@15 . tAF

    tAF  shift, and go to state 176


State 172

   54 DeclarationIntTabMemeLigne: tVIRG tWORD tCO tNOMBRE tCF DeclarationIntTabMemeLigne .

    $default  reduce using rule 54 (DeclarationIntTabMemeLigne)


State 173

   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite tPF . tAO Input tAF

    tAO  shift, and go to state 177


State 174

   25 Else: tELSE . $@8 tAO Input tAF
   27     | tELSE . $@9 If

    tIF       reduce using rule 26 ($@9)
    $default  reduce using rule 24 ($@8)

    $@8  go to state 178
    $@9  go to state 179


State 175

   23 If: tIF tPO Condition $@6 tPF tAO Input tAF $@7 Else .

    $default  reduce using rule 23 (If)


State 176

   64 Function: tINTEGER tWORD $@14 tPO Arguments_Declaration tPF tAO Input $@15 tAF .

    $default  reduce using rule 64 (Function)


State 177

   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite tPF tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 180


State 178

   25 Else: tELSE $@8 . tAO Input tAF

    tAO  shift, and go to state 181


State 179

   27 Else: tELSE $@9 . If

    tIF  shift, and go to state 24

    If  go to state 182


State 180

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite tPF tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 183
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 181

   25 Else: tELSE $@8 tAO . Input tAF

    $default  reduce using rule 1 (Input)

    Input  go to state 184


State 182

   27 Else: tELSE $@9 If .

    $default  reduce using rule 27 (Else)


State 183

   61 For: tFOR tPO Egalite tPOINTVIRG $@12 Condition $@13 tPOINTVIRG Egalite tPF tAO Input tAF .

    $default  reduce using rule 61 (For)


State 184

    2 Input: Input . tNEWLINE
    3      | Input . Egalite tPOINTVIRG
    4      | Input . Declaration
    6      | Input . $@1 While
    8      | Input . $@2 For
   10      | Input . $@3 If
   12      | Input . $@4 Function
   13      | Input . Appel_Function
   14      | Input . Main
   25 Else: tELSE $@8 tAO Input . tAF

    error     shift, and go to state 3
    tINTEGER  shift, and go to state 4
    tAF       shift, and go to state 185
    tWORD     shift, and go to state 5
    tNEWLINE  shift, and go to state 6

    tINTEGER  [reduce using rule 11 ($@4)]
    tCHAR     reduce using rule 11 ($@4)
    tVOID     reduce using rule 11 ($@4)
    tIF       reduce using rule 9 ($@3)
    tWHILE    reduce using rule 5 ($@1)
    tFOR      reduce using rule 7 ($@2)

    $@1             go to state 7
    $@2             go to state 8
    $@3             go to state 9
    $@4             go to state 10
    Main            go to state 11
    LeftTerm        go to state 12
    Egalite         go to state 13
    Declaration     go to state 14
    Appel_Function  go to state 15


State 185

   25 Else: tELSE $@8 tAO Input tAF .

    $default  reduce using rule 25 (Else)
